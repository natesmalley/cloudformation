AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Purple â€“ EKS cluster (control plane, managed node group, optional Fargate,
  CloudWatch log group, and a DVWA Helm release).

###############################################################################
# Parameters
###############################################################################
Parameters:

  # Subnets for the cluster
  SubnetIds:
    Type: CommaDelimitedList
    Description: "Subnet IDs for worker nodes and control plane ENIs"

  # Extra control-plane security groups (optional)
  AllowedSecurityGroups:
    Type: CommaDelimitedList
    Default: ""
    Description: "Additional SG IDs to attach to the cluster control plane"

  # SSH to worker nodes
  EnableSSH:
    Type: String
    AllowedValues: ["true","false"]
    Default: "false"
    Description: "Enable SSH access to EC2 nodes"

  SshKeyPairName:
    Type: String
    Default: ""
    Description: "EC2 KeyPair name (required if EnableSSH = true)"

  # Cluster identity
  ClusterName:
    Type: String
    Default: purple-eks
    Description: "EKS cluster name"

  ClusterVersion:
    Type: String
    Default: "1.28"
    Description: "Kubernetes version"

  # API endpoint toggles
  EnablePublicAccess:
    Type: String
    AllowedValues: ["true","false"]
    Default: "false"
    Description: "Make API server publicly accessible"

  EndpointPrivateAccess:
    Type: String
    AllowedValues: ["true","false"]
    Default: "true"
    Description: "Keep API server private endpoint enabled"

  # Node group sizing
  NodeGroupMinSize:
    Type: Number
    Default: 1
  NodeGroupDesiredSize:
    Type: Number
    Default: 2
  NodeGroupMaxSize:
    Type: Number
    Default: 4
  NodeVolumeSize:
    Type: Number
    Default: 50
    Description: "Root volume size (GiB)"
  NodeInstanceType:
    Type: String
    Default: t3.medium

  # Control-plane logging
  EnableControlPlaneLogging:
    Type: String
    AllowedValues: ["true","false"]
    Default: "true"
  LogRetentionDays:
    Type: Number
    Default: 30

  # Fargate support
  EnableFargate:
    Type: String
    AllowedValues: ["true","false"]
    Default: "false"

  # Where the packaged DVWA chart lives
  HelmChartS3Url:
    Type: String
    Description: "S3 URL or HTTP(S) URL of the DVWA Helm chart"

###############################################################################
# Conditions
###############################################################################
Conditions:
  UsePublicAccess: !Equals [ !Ref EnablePublicAccess, "true" ]
  UsePrivateAccess: !Equals [ !Ref EndpointPrivateAccess, "true" ]
  UseFargate:      !Equals [ !Ref EnableFargate, "true" ]
  NeedSSHKey:      !And [ !Equals [ !Ref EnableSSH, "true" ], !Not [ !Equals [ !Ref SshKeyPairName, "" ] ] ]
  EnableCPLogs:    !Equals [ !Ref EnableControlPlaneLogging, "true" ]
  HasExtraSGs:     !Not   [ !Equals [ !Join ["", !Ref AllowedSecurityGroups], "" ] ]

###############################################################################
# Resources
###############################################################################
Resources:

  # (1) IAM role for EKS control plane
  EksClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: eks.amazonaws.com }
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSVPCResourceController

  # (2) IAM role for worker nodes
  NodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: ec2.amazonaws.com }
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  # (3) Control-plane CloudWatch Logs group
  EksLogGroup:
    Condition: EnableCPLogs
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:    !Sub "/aws/eks/${ClusterName}/control-plane"
      RetentionInDays: !Ref LogRetentionDays

  # (4) The EKS cluster itself
  EksCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name:    !Ref ClusterName
      Version: !Ref ClusterVersion
      RoleArn: !GetAtt EksClusterRole.Arn
      ResourcesVpcConfig:
        SubnetIds:            !Ref SubnetIds
        EndpointPublicAccess: !If [UsePublicAccess, true, false]
        EndpointPrivateAccess: !If [UsePublicAccess, false, !If [UsePrivateAccess, true, false]]
        SecurityGroupIds: !If [HasExtraSGs, !Ref AllowedSecurityGroups, !Ref "AWS::NoValue"]
      Logging:
        ClusterLogging:
          - Enabled: !If [EnableCPLogs, true, false]
            Types:
              - api
              - audit
              - authenticator
              - controllerManager
              - scheduler

  # (5) Managed node group
  NodeGroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName:   !Ref EksCluster
      NodegroupName: !Sub "${ClusterName}-managed"
      Subnets:       !Ref SubnetIds
      NodeRole:      !GetAtt NodeRole.Arn
      ScalingConfig:
        MinSize:     !Ref NodeGroupMinSize
        DesiredSize: !Ref NodeGroupDesiredSize
        MaxSize:     !Ref NodeGroupMaxSize
      DiskSize:      !Ref NodeVolumeSize
      InstanceTypes: [ !Ref NodeInstanceType ]
      RemoteAccess: !If
        - NeedSSHKey
        - { Ec2SshKey: !Ref SshKeyPairName }
        - !Ref "AWS::NoValue"

  # (6) Optional Fargate profile
  FargateProfile:
    Condition: UseFargate
    Type: AWS::EKS::FargateProfile
    Properties:
      ClusterName:         !Ref EksCluster
      FargateProfileName:  !Sub "${ClusterName}-fp"
      PodExecutionRoleArn: !GetAtt NodeRole.Arn
      Subnets:             !Ref SubnetIds
      Selectors:
        - Namespace: default

  DvwaHelm:
    Type: AWSQS::Kubernetes::Helm
    DependsOn: NodeGroup
    Properties:
      ClusterName: !Ref EksCluster
      Name:        dvwa
      Namespace:   default
      Chart:       !Ref HelmChartS3Url
      Wait:        true

###############################################################################
# Outputs
###############################################################################
Outputs:
  ClusterId:
    Value: !Ref EksCluster

  ClusterName:
    Value: !Ref ClusterName

  ClusterEndpoint:
    Value: !GetAtt EksCluster.Endpoint

  EksKubeconfigCommand:
    Value: !Sub |
      aws eks update-kubeconfig --region ${AWS::Region} --name ${ClusterName}