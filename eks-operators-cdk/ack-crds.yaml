---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: apps.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: App
    listKind: AppList
    plural: apps
    singular: app
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: App is the Schema for the Apps API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AppSpec defines the desired state of App.
            properties:
              appName:
                description: The name of the app.
                type: string
              appType:
                description: The type of app.
                type: string
              domainID:
                description: The domain ID.
                type: string
              resourceSpec:
                description: |-
                  The instance type and the Amazon Resource Name (ARN) of the SageMaker image
                  created on the instance.

                  The value of InstanceType passed as part of the ResourceSpec in the CreateApp
                  call overrides the value passed as part of the ResourceSpec configured for
                  the user profile or the domain. If InstanceType is not specified in any of
                  those three ResourceSpec values for a KernelGateway app, the CreateApp call
                  fails with a request validation error.
                properties:
                  instanceType:
                    type: string
                  lifecycleConfigARN:
                    type: string
                  sageMakerImageARN:
                    type: string
                  sageMakerImageVersionARN:
                    type: string
                  sageMakerImageVersionAlias:
                    type: string
                type: object
              tags:
                description: |-
                  Each tag consists of a key and an optional value. Tag keys must be unique
                  per resource.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              userProfileName:
                description: The user profile name. If this value is not set, then
                  SpaceName must be set.
                type: string
            required:
            - appName
            - appType
            - domainID
            type: object
          status:
            description: AppStatus defines the observed state of App
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              status:
                description: The status.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: dataqualityjobdefinitions.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: DataQualityJobDefinition
    listKind: DataQualityJobDefinitionList
    plural: dataqualityjobdefinitions
    singular: dataqualityjobdefinition
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataQualityJobDefinition is the Schema for the DataQualityJobDefinitions
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DataQualityJobDefinitionSpec defines the desired state of
              DataQualityJobDefinition.
            properties:
              dataQualityAppSpecification:
                description: Specifies the container that runs the monitoring job.
                properties:
                  containerArguments:
                    items:
                      type: string
                    type: array
                  containerEntrypoint:
                    items:
                      type: string
                    type: array
                  environment:
                    additionalProperties:
                      type: string
                    type: object
                  imageURI:
                    type: string
                  postAnalyticsProcessorSourceURI:
                    type: string
                  recordPreprocessorSourceURI:
                    type: string
                type: object
              dataQualityBaselineConfig:
                description: Configures the constraints and baselines for the monitoring
                  job.
                properties:
                  baseliningJobName:
                    type: string
                  constraintsResource:
                    description: The constraints resource for a monitoring job.
                    properties:
                      s3URI:
                        type: string
                    type: object
                  statisticsResource:
                    description: The statistics resource for a monitoring job.
                    properties:
                      s3URI:
                        type: string
                    type: object
                type: object
              dataQualityJobInput:
                description: |-
                  A list of inputs for the monitoring job. Currently endpoints are supported
                  as monitoring inputs.
                properties:
                  endpointInput:
                    description: Input object for the endpoint
                    properties:
                      endTimeOffset:
                        type: string
                      endpointName:
                        type: string
                      excludeFeaturesAttribute:
                        type: string
                      featuresAttribute:
                        type: string
                      inferenceAttribute:
                        type: string
                      localPath:
                        type: string
                      probabilityAttribute:
                        type: string
                      probabilityThresholdAttribute:
                        type: number
                      s3DataDistributionType:
                        type: string
                      s3InputMode:
                        type: string
                      startTimeOffset:
                        type: string
                    type: object
                type: object
              dataQualityJobOutputConfig:
                description: The output configuration for monitoring jobs.
                properties:
                  kmsKeyID:
                    type: string
                  monitoringOutputs:
                    items:
                      description: The output object for a monitoring job.
                      properties:
                        s3Output:
                          description: |-
                            Information about where and how you want to store the results of a monitoring
                            job.
                          properties:
                            localPath:
                              type: string
                            s3URI:
                              type: string
                            s3UploadMode:
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
              jobDefinitionName:
                description: The name for the monitoring job definition.
                type: string
              jobResources:
                description: Identifies the resources to deploy for a monitoring job.
                properties:
                  clusterConfig:
                    description: Configuration for the cluster used to run model monitoring
                      jobs.
                    properties:
                      instanceCount:
                        format: int64
                        type: integer
                      instanceType:
                        type: string
                      volumeKMSKeyID:
                        type: string
                      volumeSizeInGB:
                        format: int64
                        type: integer
                    type: object
                type: object
              networkConfig:
                description: Specifies networking configuration for the monitoring
                  job.
                properties:
                  enableInterContainerTrafficEncryption:
                    type: boolean
                  enableNetworkIsolation:
                    type: boolean
                  vpcConfig:
                    description: |-
                      Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                      hosted models, and compute resources have access to. You can control access
                      to and from your resources by configuring a VPC. For more information, see
                      Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                    properties:
                      securityGroupIDs:
                        items:
                          type: string
                        type: array
                      subnets:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              roleARN:
                description: |-
                  The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume
                  to perform tasks on your behalf.
                type: string
              stoppingCondition:
                description: A time limit for how long the monitoring job is allowed
                  to run before stopping.
                properties:
                  maxRuntimeInSeconds:
                    format: int64
                    type: integer
                type: object
              tags:
                description: |-
                  (Optional) An array of key-value pairs. For more information, see Using Cost
                  Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL)
                  in the Amazon Web Services Billing and Cost Management User Guide.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - dataQualityAppSpecification
            - dataQualityJobInput
            - dataQualityJobOutputConfig
            - jobDefinitionName
            - jobResources
            - roleARN
            type: object
          status:
            description: DataQualityJobDefinitionStatus defines the observed state
              of DataQualityJobDefinition
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: domains.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: Domain
    listKind: DomainList
    plural: domains
    singular: domain
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.domainID
      name: DOMAIN-ID
      type: string
    - jsonPath: .status.status
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Domain is the Schema for the Domains API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DomainSpec defines the desired state of Domain.
            properties:
              appNetworkAccessType:
                description: |-
                  Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly.

                    - PublicInternetOnly - Non-EFS traffic is through a VPC managed by Amazon
                      SageMaker, which allows direct internet access

                    - VpcOnly - All traffic is through the specified VPC and subnets
                type: string
              appSecurityGroupManagement:
                description: |-
                  The entity that creates and manages the required security groups for inter-app
                  communication in VPCOnly mode. Required when CreateDomain.AppNetworkAccessType
                  is VPCOnly and DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn
                  is provided. If setting up the domain for use with RStudio, this value must
                  be set to Service.
                type: string
              authMode:
                description: The mode of authentication that members use to access
                  the domain.
                type: string
              defaultUserSettings:
                description: |-
                  The default settings to use to create a user profile when UserSettings isn't
                  specified in the call to the CreateUserProfile API.

                  SecurityGroups is aggregated when specified in both calls. For all other
                  settings in UserSettings, the values specified in CreateUserProfile take
                  precedence over those specified in CreateDomain.
                properties:
                  codeEditorAppSettings:
                    description: |-
                      The Code Editor application settings.

                      For more information about Code Editor, see Get started with Code Editor
                      in Amazon SageMaker (https://docs.aws.amazon.com/sagemaker/latest/dg/code-editor.html).
                    properties:
                      defaultResourceSpec:
                        description: |-
                          Specifies the ARN's of a SageMaker image and SageMaker image version, and
                          the instance type that the version runs on.
                        properties:
                          instanceType:
                            type: string
                          lifecycleConfigARN:
                            type: string
                          sageMakerImageARN:
                            type: string
                          sageMakerImageVersionARN:
                            type: string
                          sageMakerImageVersionAlias:
                            type: string
                        type: object
                      lifecycleConfigARNs:
                        items:
                          type: string
                        type: array
                    type: object
                  customFileSystemConfigs:
                    items:
                      description: |-
                        The settings for assigning a custom file system to a user profile or space
                        for an Amazon SageMaker Domain. Permitted users can access this file system
                        in Amazon SageMaker Studio.
                      properties:
                        efsFileSystemConfig:
                          description: |-
                            The settings for assigning a custom Amazon EFS file system to a user profile
                            or space for an Amazon SageMaker Domain.
                          properties:
                            fileSystemID:
                              type: string
                            fileSystemPath:
                              type: string
                          type: object
                      type: object
                    type: array
                  customPosixUserConfig:
                    description: Details about the POSIX identity that is used for
                      file system operations.
                    properties:
                      gid:
                        format: int64
                        type: integer
                      uid:
                        format: int64
                        type: integer
                    type: object
                  defaultLandingURI:
                    type: string
                  executionRole:
                    type: string
                  jupyterLabAppSettings:
                    description: The settings for the JupyterLab application.
                    properties:
                      customImages:
                        items:
                          description: |-
                            A custom SageMaker image. For more information, see Bring your own SageMaker
                            image (https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html).
                          properties:
                            appImageConfigName:
                              type: string
                            imageName:
                              type: string
                            imageVersionNumber:
                              format: int64
                              type: integer
                          type: object
                        type: array
                      defaultResourceSpec:
                        description: |-
                          Specifies the ARN's of a SageMaker image and SageMaker image version, and
                          the instance type that the version runs on.
                        properties:
                          instanceType:
                            type: string
                          lifecycleConfigARN:
                            type: string
                          sageMakerImageARN:
                            type: string
                          sageMakerImageVersionARN:
                            type: string
                          sageMakerImageVersionAlias:
                            type: string
                        type: object
                      lifecycleConfigARNs:
                        items:
                          type: string
                        type: array
                    type: object
                  jupyterServerAppSettings:
                    description: The JupyterServer app settings.
                    properties:
                      defaultResourceSpec:
                        description: |-
                          Specifies the ARN's of a SageMaker image and SageMaker image version, and
                          the instance type that the version runs on.
                        properties:
                          instanceType:
                            type: string
                          lifecycleConfigARN:
                            type: string
                          sageMakerImageARN:
                            type: string
                          sageMakerImageVersionARN:
                            type: string
                          sageMakerImageVersionAlias:
                            type: string
                        type: object
                      lifecycleConfigARNs:
                        items:
                          type: string
                        type: array
                    type: object
                  kernelGatewayAppSettings:
                    description: The KernelGateway app settings.
                    properties:
                      customImages:
                        items:
                          description: |-
                            A custom SageMaker image. For more information, see Bring your own SageMaker
                            image (https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html).
                          properties:
                            appImageConfigName:
                              type: string
                            imageName:
                              type: string
                            imageVersionNumber:
                              format: int64
                              type: integer
                          type: object
                        type: array
                      defaultResourceSpec:
                        description: |-
                          Specifies the ARN's of a SageMaker image and SageMaker image version, and
                          the instance type that the version runs on.
                        properties:
                          instanceType:
                            type: string
                          lifecycleConfigARN:
                            type: string
                          sageMakerImageARN:
                            type: string
                          sageMakerImageVersionARN:
                            type: string
                          sageMakerImageVersionAlias:
                            type: string
                        type: object
                      lifecycleConfigARNs:
                        items:
                          type: string
                        type: array
                    type: object
                  rStudioServerProAppSettings:
                    description: |-
                      A collection of settings that configure user interaction with the RStudioServerPro
                      app.
                    properties:
                      accessStatus:
                        type: string
                      userGroup:
                        type: string
                    type: object
                  securityGroups:
                    items:
                      type: string
                    type: array
                  sharingSettings:
                    description: |-
                      Specifies options for sharing Amazon SageMaker Studio notebooks. These settings
                      are specified as part of DefaultUserSettings when the CreateDomain API is
                      called, and as part of UserSettings when the CreateUserProfile API is called.
                      When SharingSettings is not specified, notebook sharing isn't allowed.
                    properties:
                      notebookOutputOption:
                        type: string
                      s3KMSKeyID:
                        type: string
                      s3OutputPath:
                        type: string
                    type: object
                  spaceStorageSettings:
                    description: The default storage settings for a space.
                    properties:
                      defaultEBSStorageSettings:
                        description: |-
                          A collection of default EBS storage settings that apply to spaces created
                          within a domain or user profile.
                        properties:
                          defaultEBSVolumeSizeInGb:
                            format: int64
                            type: integer
                          maximumEBSVolumeSizeInGb:
                            format: int64
                            type: integer
                        type: object
                    type: object
                  studioWebPortal:
                    type: string
                  tensorBoardAppSettings:
                    description: The TensorBoard app settings.
                    properties:
                      defaultResourceSpec:
                        description: |-
                          Specifies the ARN's of a SageMaker image and SageMaker image version, and
                          the instance type that the version runs on.
                        properties:
                          instanceType:
                            type: string
                          lifecycleConfigARN:
                            type: string
                          sageMakerImageARN:
                            type: string
                          sageMakerImageVersionARN:
                            type: string
                          sageMakerImageVersionAlias:
                            type: string
                        type: object
                    type: object
                type: object
              domainName:
                description: A name for the domain.
                type: string
              domainSettings:
                description: A collection of Domain settings.
                properties:
                  dockerSettings:
                    description: A collection of settings that configure the domain's
                      Docker interaction.
                    properties:
                      enableDockerAccess:
                        type: string
                      vpcOnlyTrustedAccounts:
                        items:
                          type: string
                        type: array
                    type: object
                  rStudioServerProDomainSettings:
                    description: |-
                      A collection of settings that configure the RStudioServerPro Domain-level
                      app.
                    properties:
                      defaultResourceSpec:
                        description: |-
                          Specifies the ARN's of a SageMaker image and SageMaker image version, and
                          the instance type that the version runs on.
                        properties:
                          instanceType:
                            type: string
                          lifecycleConfigARN:
                            type: string
                          sageMakerImageARN:
                            type: string
                          sageMakerImageVersionARN:
                            type: string
                          sageMakerImageVersionAlias:
                            type: string
                        type: object
                      domainExecutionRoleARN:
                        type: string
                      rStudioConnectURL:
                        type: string
                      rStudioPackageManagerURL:
                        type: string
                    type: object
                  securityGroupIDs:
                    items:
                      type: string
                    type: array
                type: object
              homeEFSFileSystemKMSKeyID:
                description: Use KmsKeyId.
                type: string
              kmsKeyID:
                description: |-
                  SageMaker uses Amazon Web Services KMS to encrypt EFS and EBS volumes attached
                  to the domain with an Amazon Web Services managed key by default. For more
                  control, specify a customer managed key.
                type: string
              subnetIDs:
                description: The VPC subnets that the domain uses for communication.
                items:
                  type: string
                type: array
              tags:
                description: |-
                  Tags to associated with the Domain. Each tag consists of a key and an optional
                  value. Tag keys must be unique per resource. Tags are searchable using the
                  Search API.

                  Tags that you specify for the Domain are also added to all Apps that the
                  Domain launches.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              vpcID:
                description: |-
                  The ID of the Amazon Virtual Private Cloud (VPC) that the domain uses for
                  communication.
                type: string
            required:
            - authMode
            - defaultUserSettings
            - domainName
            - subnetIDs
            - vpcID
            type: object
          status:
            description: DomainStatus defines the observed state of Domain
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              domainID:
                description: The domain ID.
                type: string
              status:
                description: The status.
                type: string
              url:
                description: The URL to the created domain.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: endpointconfigs.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: EndpointConfig
    listKind: EndpointConfigList
    plural: endpointconfigs
    singular: endpointconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EndpointConfig is the Schema for the EndpointConfigs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EndpointConfigSpec defines the desired state of EndpointConfig.
            properties:
              asyncInferenceConfig:
                description: |-
                  Specifies configuration for how an endpoint performs asynchronous inference.
                  This is a required field in order for your Endpoint to be invoked using InvokeEndpointAsync
                  (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_runtime_InvokeEndpointAsync.html).
                properties:
                  clientConfig:
                    description: |-
                      Configures the behavior of the client used by SageMaker to interact with
                      the model container during asynchronous inference.
                    properties:
                      maxConcurrentInvocationsPerInstance:
                        format: int64
                        type: integer
                    type: object
                  outputConfig:
                    description: Specifies the configuration for asynchronous inference
                      invocation outputs.
                    properties:
                      kmsKeyID:
                        type: string
                      notificationConfig:
                        description: |-
                          Specifies the configuration for notifications of inference results for asynchronous
                          inference.
                        properties:
                          errorTopic:
                            type: string
                          includeInferenceResponseIn:
                            items:
                              type: string
                            type: array
                          successTopic:
                            type: string
                        type: object
                      s3FailurePath:
                        type: string
                      s3OutputPath:
                        type: string
                    type: object
                type: object
              dataCaptureConfig:
                description: Configuration to control how SageMaker captures inference
                  data.
                properties:
                  captureContentTypeHeader:
                    description: |-
                      Configuration specifying how to treat different headers. If no headers are
                      specified Amazon SageMaker will by default base64 encode when capturing the
                      data.
                    properties:
                      csvContentTypes:
                        items:
                          type: string
                        type: array
                      jsonContentTypes:
                        items:
                          type: string
                        type: array
                    type: object
                  captureOptions:
                    items:
                      description: Specifies data Model Monitor will capture.
                      properties:
                        captureMode:
                          type: string
                      type: object
                    type: array
                  destinationS3URI:
                    type: string
                  enableCapture:
                    type: boolean
                  initialSamplingPercentage:
                    format: int64
                    type: integer
                  kmsKeyID:
                    type: string
                type: object
              enableNetworkIsolation:
                description: |-
                  Sets whether all model containers deployed to the endpoint are isolated.
                  If they are, no inbound or outbound network calls can be made to or from
                  the model containers.
                type: boolean
              endpointConfigName:
                description: |-
                  The name of the endpoint configuration. You specify this name in a CreateEndpoint
                  (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpoint.html)
                  request.
                type: string
              executionRoleARN:
                description: |-
                  The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume
                  to perform actions on your behalf. For more information, see SageMaker Roles
                  (https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html).

                  To be able to pass this role to Amazon SageMaker, the caller of this action
                  must have the iam:PassRole permission.
                type: string
              kmsKeyID:
                description: |-
                  The Amazon Resource Name (ARN) of a Amazon Web Services Key Management Service
                  key that SageMaker uses to encrypt data on the storage volume attached to
                  the ML compute instance that hosts the endpoint.

                  The KmsKeyId can be any of the following formats:

                    - Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

                    - Key ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

                    - Alias name: alias/ExampleAlias

                    - Alias name ARN: arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias

                  The KMS key policy must grant permission to the IAM role that you specify
                  in your CreateEndpoint, UpdateEndpoint requests. For more information, refer
                  to the Amazon Web Services Key Management Service section Using Key Policies
                  in Amazon Web Services KMS (https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html)

                  Certain Nitro-based instances include local storage, dependent on the instance
                  type. Local storage volumes are encrypted using a hardware module on the
                  instance. You can't request a KmsKeyId when using an instance type with local
                  storage. If any of the models that you specify in the ProductionVariants
                  parameter use nitro-based instances with local storage, do not specify a
                  value for the KmsKeyId parameter. If you specify a value for KmsKeyId when
                  using any nitro-based instances with local storage, the call to CreateEndpointConfig
                  fails.

                  For a list of instance types that support local instance storage, see Instance
                  Store Volumes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes).

                  For more information about local instance storage encryption, see SSD Instance
                  Store Volumes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html).
                type: string
              productionVariants:
                description: |-
                  An array of ProductionVariant objects, one for each model that you want to
                  host at this endpoint.
                items:
                  description: |-
                    Identifies a model that you want to host and the resources chosen to deploy
                    for hosting it. If you are deploying multiple models, tell SageMaker how
                    to distribute traffic among the models by specifying variant weights. For
                    more information on production variants, check Production variants (https://docs.aws.amazon.com/sagemaker/latest/dg/model-ab-testing.html).
                  properties:
                    acceleratorType:
                      type: string
                    containerStartupHealthCheckTimeoutInSeconds:
                      format: int64
                      type: integer
                    coreDumpConfig:
                      description: |-
                        Specifies configuration for a core dump from the model container when the
                        process crashes.
                      properties:
                        destinationS3URI:
                          type: string
                        kmsKeyID:
                          type: string
                      type: object
                    enableSSMAccess:
                      type: boolean
                    initialInstanceCount:
                      format: int64
                      type: integer
                    initialVariantWeight:
                      type: number
                    instanceType:
                      type: string
                    managedInstanceScaling:
                      description: |-
                        Settings that control the range in the number of instances that the endpoint
                        provisions as it scales up or down to accommodate traffic.
                      properties:
                        maxInstanceCount:
                          format: int64
                          type: integer
                        minInstanceCount:
                          format: int64
                          type: integer
                        status:
                          type: string
                      type: object
                    modelDataDownloadTimeoutInSeconds:
                      format: int64
                      type: integer
                    modelName:
                      type: string
                    routingConfig:
                      description: |-
                        Settings that control how the endpoint routes incoming traffic to the instances
                        that the endpoint hosts.
                      properties:
                        routingStrategy:
                          type: string
                      type: object
                    serverlessConfig:
                      description: Specifies the serverless configuration for an endpoint
                        variant.
                      properties:
                        maxConcurrency:
                          format: int64
                          type: integer
                        memorySizeInMB:
                          format: int64
                          type: integer
                        provisionedConcurrency:
                          format: int64
                          type: integer
                      type: object
                    variantName:
                      type: string
                    volumeSizeInGB:
                      format: int64
                      type: integer
                  type: object
                type: array
              tags:
                description: |-
                  An array of key-value pairs. You can use tags to categorize your Amazon Web
                  Services resources in different ways, for example, by purpose, owner, or
                  environment. For more information, see Tagging Amazon Web Services Resources
                  (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              vpcConfig:
                description: |-
                  Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                  hosted models, and compute resources have access to. You can control access
                  to and from your resources by configuring a VPC. For more information, see
                  Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                properties:
                  securityGroupIDs:
                    items:
                      type: string
                    type: array
                  subnets:
                    items:
                      type: string
                    type: array
                type: object
            required:
            - endpointConfigName
            - productionVariants
            type: object
          status:
            description: EndpointConfigStatus defines the observed state of EndpointConfig
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: endpoints.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: Endpoint
    listKind: EndpointList
    plural: endpoints
    singular: endpoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.endpointStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Endpoint is the Schema for the Endpoints API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              EndpointSpec defines the desired state of Endpoint.

              A hosted endpoint for real-time inference.
            properties:
              deploymentConfig:
                description: |-
                  The deployment configuration for an endpoint, which contains the desired
                  deployment strategy and rollback configurations.
                properties:
                  autoRollbackConfiguration:
                    description: |-
                      Automatic rollback configuration for handling endpoint deployment failures
                      and recovery.
                    properties:
                      alarms:
                        items:
                          description: An Amazon CloudWatch alarm configured to monitor
                            metrics on an endpoint.
                          properties:
                            alarmName:
                              type: string
                          type: object
                        type: array
                    type: object
                  blueGreenUpdatePolicy:
                    description: |-
                      Update policy for a blue/green deployment. If this update policy is specified,
                      SageMaker creates a new fleet during the deployment while maintaining the
                      old fleet. SageMaker flips traffic to the new fleet according to the specified
                      traffic routing configuration. Only one update policy should be used in the
                      deployment configuration. If no update policy is specified, SageMaker uses
                      a blue/green deployment strategy with all at once traffic shifting by default.
                    properties:
                      maximumExecutionTimeoutInSeconds:
                        format: int64
                        type: integer
                      terminationWaitInSeconds:
                        format: int64
                        type: integer
                      trafficRoutingConfiguration:
                        description: |-
                          Defines the traffic routing strategy during an endpoint deployment to shift
                          traffic from the old fleet to the new fleet.
                        properties:
                          canarySize:
                            description: |-
                              Specifies the type and size of the endpoint capacity to activate for a blue/green
                              deployment, a rolling deployment, or a rollback strategy. You can specify
                              your batches as either instance count or the overall percentage or your fleet.

                              For a rollback strategy, if you don't specify the fields in this object,
                              or if you set the Value to 100%, then SageMaker uses a blue/green rollback
                              strategy and rolls all traffic back to the blue fleet.
                            properties:
                              type_:
                                type: string
                              value:
                                format: int64
                                type: integer
                            type: object
                          linearStepSize:
                            description: |-
                              Specifies the type and size of the endpoint capacity to activate for a blue/green
                              deployment, a rolling deployment, or a rollback strategy. You can specify
                              your batches as either instance count or the overall percentage or your fleet.

                              For a rollback strategy, if you don't specify the fields in this object,
                              or if you set the Value to 100%, then SageMaker uses a blue/green rollback
                              strategy and rolls all traffic back to the blue fleet.
                            properties:
                              type_:
                                type: string
                              value:
                                format: int64
                                type: integer
                            type: object
                          type_:
                            type: string
                          waitIntervalInSeconds:
                            format: int64
                            type: integer
                        type: object
                    type: object
                  rollingUpdatePolicy:
                    description: Specifies a rolling deployment strategy for updating
                      a SageMaker endpoint.
                    properties:
                      maximumBatchSize:
                        description: |-
                          Specifies the type and size of the endpoint capacity to activate for a blue/green
                          deployment, a rolling deployment, or a rollback strategy. You can specify
                          your batches as either instance count or the overall percentage or your fleet.

                          For a rollback strategy, if you don't specify the fields in this object,
                          or if you set the Value to 100%, then SageMaker uses a blue/green rollback
                          strategy and rolls all traffic back to the blue fleet.
                        properties:
                          type_:
                            type: string
                          value:
                            format: int64
                            type: integer
                        type: object
                      maximumExecutionTimeoutInSeconds:
                        format: int64
                        type: integer
                      rollbackMaximumBatchSize:
                        description: |-
                          Specifies the type and size of the endpoint capacity to activate for a blue/green
                          deployment, a rolling deployment, or a rollback strategy. You can specify
                          your batches as either instance count or the overall percentage or your fleet.

                          For a rollback strategy, if you don't specify the fields in this object,
                          or if you set the Value to 100%, then SageMaker uses a blue/green rollback
                          strategy and rolls all traffic back to the blue fleet.
                        properties:
                          type_:
                            type: string
                          value:
                            format: int64
                            type: integer
                        type: object
                      waitIntervalInSeconds:
                        format: int64
                        type: integer
                    type: object
                type: object
              endpointConfigName:
                description: |-
                  The name of an endpoint configuration. For more information, see CreateEndpointConfig
                  (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpointConfig.html).
                type: string
              endpointName:
                description: |-
                  The name of the endpoint.The name must be unique within an Amazon Web Services
                  Region in your Amazon Web Services account. The name is case-insensitive
                  in CreateEndpoint, but the case is preserved and must be matched in InvokeEndpoint
                  (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_runtime_InvokeEndpoint.html).
                type: string
              tags:
                description: |-
                  An array of key-value pairs. You can use tags to categorize your Amazon Web
                  Services resources in different ways, for example, by purpose, owner, or
                  environment. For more information, see Tagging Amazon Web Services Resources
                  (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - endpointConfigName
            - endpointName
            type: object
          status:
            description: EndpointStatus defines the observed state of Endpoint
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: A timestamp that shows when the endpoint was created.
                format: date-time
                type: string
              endpointStatus:
                description: |-
                  The status of the endpoint.

                     * OutOfService: Endpoint is not available to take incoming requests.

                     * Creating: CreateEndpoint (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpoint.html)
                     is executing.

                     * Updating: UpdateEndpoint (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_UpdateEndpoint.html)
                     or UpdateEndpointWeightsAndCapacities (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_UpdateEndpointWeightsAndCapacities.html)
                     is executing.

                     * SystemUpdating: Endpoint is undergoing maintenance and cannot be updated
                     or deleted or re-scaled until it has completed. This maintenance operation
                     does not change any customer-specified values such as VPC config, KMS
                     encryption, model, instance type, or instance count.

                     * RollingBack: Endpoint fails to scale up or down or change its variant
                     weight and is in the process of rolling back to its previous configuration.
                     Once the rollback completes, endpoint returns to an InService status.
                     This transitional status only applies to an endpoint that has autoscaling
                     enabled and is undergoing variant weight or capacity changes as part of
                     an UpdateEndpointWeightsAndCapacities (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_UpdateEndpointWeightsAndCapacities.html)
                     call or when the UpdateEndpointWeightsAndCapacities (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_UpdateEndpointWeightsAndCapacities.html)
                     operation is called explicitly.

                     * InService: Endpoint is available to process incoming requests.

                     * Deleting: DeleteEndpoint (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteEndpoint.html)
                     is executing.

                     * Failed: Endpoint could not be created, updated, or re-scaled. Use the
                     FailureReason value returned by DescribeEndpoint (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeEndpoint.html)
                     for information about the failure. DeleteEndpoint (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteEndpoint.html)
                     is the only operation that can be performed on a failed endpoint.

                     * UpdateRollbackFailed: Both the rolling deployment and auto-rollback
                     failed. Your endpoint is in service with a mix of the old and new endpoint
                     configurations. For information about how to remedy this issue and restore
                     the endpoint's status to InService, see Rolling Deployments (https://docs.aws.amazon.com/sagemaker/latest/dg/deployment-guardrails-rolling.html).
                type: string
              failureReason:
                description: If the status of the endpoint is Failed, the reason why
                  it failed.
                type: string
              lastModifiedTime:
                description: A timestamp that shows when the endpoint was last modified.
                format: date-time
                type: string
              pendingDeploymentSummary:
                description: |-
                  Returns the summary of an in-progress deployment. This field is only returned
                  when the endpoint is creating or updating with a new endpoint configuration.
                properties:
                  endpointConfigName:
                    type: string
                  productionVariants:
                    items:
                      description: |-
                        The production variant summary for a deployment when an endpoint is creating
                        or updating with the CreateEndpoint (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpoint.html)
                        or UpdateEndpoint (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_UpdateEndpoint.html)
                        operations. Describes the VariantStatus , weight and capacity for a production
                        variant associated with an endpoint.
                      properties:
                        acceleratorType:
                          type: string
                        currentInstanceCount:
                          format: int64
                          type: integer
                        currentServerlessConfig:
                          description: Specifies the serverless configuration for
                            an endpoint variant.
                          properties:
                            maxConcurrency:
                              format: int64
                              type: integer
                            memorySizeInMB:
                              format: int64
                              type: integer
                            provisionedConcurrency:
                              format: int64
                              type: integer
                          type: object
                        currentWeight:
                          type: number
                        deployedImages:
                          items:
                            description: |-
                              Gets the Amazon EC2 Container Registry path of the docker image of the model
                              that is hosted in this ProductionVariant (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ProductionVariant.html).

                              If you used the registry/repository[:tag] form to specify the image path
                              of the primary container when you created the model hosted in this ProductionVariant,
                              the path resolves to a path of the form registry/repository[@digest]. A digest
                              is a hash value that identifies a specific version of an image. For information
                              about Amazon ECR paths, see Pulling an Image (https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html)
                              in the Amazon ECR User Guide.
                            properties:
                              resolutionTime:
                                format: date-time
                                type: string
                              resolvedImage:
                                type: string
                              specifiedImage:
                                type: string
                            type: object
                          type: array
                        desiredInstanceCount:
                          format: int64
                          type: integer
                        desiredServerlessConfig:
                          description: Specifies the serverless configuration for
                            an endpoint variant.
                          properties:
                            maxConcurrency:
                              format: int64
                              type: integer
                            memorySizeInMB:
                              format: int64
                              type: integer
                            provisionedConcurrency:
                              format: int64
                              type: integer
                          type: object
                        desiredWeight:
                          type: number
                        instanceType:
                          type: string
                        managedInstanceScaling:
                          description: |-
                            Settings that control the range in the number of instances that the endpoint
                            provisions as it scales up or down to accommodate traffic.
                          properties:
                            maxInstanceCount:
                              format: int64
                              type: integer
                            minInstanceCount:
                              format: int64
                              type: integer
                            status:
                              type: string
                          type: object
                        routingConfig:
                          description: |-
                            Settings that control how the endpoint routes incoming traffic to the instances
                            that the endpoint hosts.
                          properties:
                            routingStrategy:
                              type: string
                          type: object
                        variantName:
                          type: string
                        variantStatus:
                          items:
                            description: Describes the status of the production variant.
                            properties:
                              startTime:
                                format: date-time
                                type: string
                              status:
                                type: string
                              statusMessage:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  startTime:
                    format: date-time
                    type: string
                type: object
              productionVariants:
                description: |-
                  An array of ProductionVariantSummary (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ProductionVariantSummary.html)
                  objects, one for each model hosted behind this endpoint.
                items:
                  description: |-
                    Describes weight and capacities for a production variant associated with
                    an endpoint. If you sent a request to the UpdateEndpointWeightsAndCapacities
                    API and the endpoint status is Updating, you get different desired and current
                    values.
                  properties:
                    currentInstanceCount:
                      format: int64
                      type: integer
                    currentServerlessConfig:
                      description: Specifies the serverless configuration for an endpoint
                        variant.
                      properties:
                        maxConcurrency:
                          format: int64
                          type: integer
                        memorySizeInMB:
                          format: int64
                          type: integer
                        provisionedConcurrency:
                          format: int64
                          type: integer
                      type: object
                    currentWeight:
                      type: number
                    deployedImages:
                      items:
                        description: |-
                          Gets the Amazon EC2 Container Registry path of the docker image of the model
                          that is hosted in this ProductionVariant (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ProductionVariant.html).

                          If you used the registry/repository[:tag] form to specify the image path
                          of the primary container when you created the model hosted in this ProductionVariant,
                          the path resolves to a path of the form registry/repository[@digest]. A digest
                          is a hash value that identifies a specific version of an image. For information
                          about Amazon ECR paths, see Pulling an Image (https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html)
                          in the Amazon ECR User Guide.
                        properties:
                          resolutionTime:
                            format: date-time
                            type: string
                          resolvedImage:
                            type: string
                          specifiedImage:
                            type: string
                        type: object
                      type: array
                    desiredInstanceCount:
                      format: int64
                      type: integer
                    desiredServerlessConfig:
                      description: Specifies the serverless configuration for an endpoint
                        variant.
                      properties:
                        maxConcurrency:
                          format: int64
                          type: integer
                        memorySizeInMB:
                          format: int64
                          type: integer
                        provisionedConcurrency:
                          format: int64
                          type: integer
                      type: object
                    desiredWeight:
                      type: number
                    managedInstanceScaling:
                      description: |-
                        Settings that control the range in the number of instances that the endpoint
                        provisions as it scales up or down to accommodate traffic.
                      properties:
                        maxInstanceCount:
                          format: int64
                          type: integer
                        minInstanceCount:
                          format: int64
                          type: integer
                        status:
                          type: string
                      type: object
                    routingConfig:
                      description: |-
                        Settings that control how the endpoint routes incoming traffic to the instances
                        that the endpoint hosts.
                      properties:
                        routingStrategy:
                          type: string
                      type: object
                    variantName:
                      type: string
                    variantStatus:
                      items:
                        description: Describes the status of the production variant.
                        properties:
                          startTime:
                            format: date-time
                            type: string
                          status:
                            type: string
                          statusMessage:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: featuregroups.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: FeatureGroup
    listKind: FeatureGroupList
    plural: featuregroups
    singular: featuregroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.featureGroupStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FeatureGroup is the Schema for the FeatureGroups API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              FeatureGroupSpec defines the desired state of FeatureGroup.

              Amazon SageMaker Feature Store stores features in a collection called Feature
              Group. A Feature Group can be visualized as a table which has rows, with
              a unique identifier for each row where each column in the table is a feature.
              In principle, a Feature Group is composed of features and values per features.
            properties:
              description:
                description: A free-form description of a FeatureGroup.
                type: string
              eventTimeFeatureName:
                description: |-
                  The name of the feature that stores the EventTime of a Record in a FeatureGroup.

                  An EventTime is a point in time when a new event occurs that corresponds
                  to the creation or update of a Record in a FeatureGroup. All Records in the
                  FeatureGroup must have a corresponding EventTime.

                  An EventTime can be a String or Fractional.

                    - Fractional: EventTime feature values must be a Unix timestamp in seconds.

                    - String: EventTime feature values must be an ISO-8601 string in the format.
                      The following formats are supported yyyy-MM-dd'T'HH:mm:ssZ and yyyy-MM-dd'T'HH:mm:ss.SSSZ
                      where yyyy, MM, and dd represent the year, month, and day respectively
                      and HH, mm, ss, and if applicable, SSS represent the hour, month, second
                      and milliseconds respsectively. 'T' and Z are constants.
                type: string
              featureDefinitions:
                description: |-
                  A list of Feature names and types. Name and Type is compulsory per Feature.

                  Valid feature FeatureTypes are Integral, Fractional and String.

                  FeatureNames cannot be any of the following: is_deleted, write_time, api_invocation_time

                  You can create up to 2,500 FeatureDefinitions per FeatureGroup.
                items:
                  description: |-
                    A list of features. You must include FeatureName and FeatureType. Valid feature
                    FeatureTypes are Integral, Fractional and String.
                  properties:
                    collectionConfig:
                      description: Configuration for your collection.
                      properties:
                        vectorConfig:
                          description: Configuration for your vector collection type.
                          properties:
                            dimension:
                              format: int64
                              type: integer
                          type: object
                      type: object
                    collectionType:
                      type: string
                    featureName:
                      type: string
                    featureType:
                      type: string
                  type: object
                type: array
              featureGroupName:
                description: |-
                  The name of the FeatureGroup. The name must be unique within an Amazon Web
                  Services Region in an Amazon Web Services account.

                  The name:

                    - Must start with an alphanumeric character.

                    - Can only include alphanumeric characters, underscores, and hyphens.
                      Spaces are not allowed.
                type: string
              offlineStoreConfig:
                description: |-
                  Use this to configure an OfflineFeatureStore. This parameter allows you to
                  specify:

                    - The Amazon Simple Storage Service (Amazon S3) location of an OfflineStore.

                    - A configuration for an Amazon Web Services Glue or Amazon Web Services
                      Hive data catalog.

                    - An KMS encryption key to encrypt the Amazon S3 location used for OfflineStore.
                      If KMS encryption key is not specified, by default we encrypt all data
                      at rest using Amazon Web Services KMS key. By defining your bucket-level
                      key (https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-key.html)
                      for SSE, you can reduce Amazon Web Services KMS requests costs by up to
                      99 percent.

                    - Format for the offline store table. Supported formats are Glue (Default)
                      and Apache Iceberg (https://iceberg.apache.org/).

                  To learn more about this parameter, see OfflineStoreConfig (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_OfflineStoreConfig.html).
                properties:
                  dataCatalogConfig:
                    description: The meta data of the Glue table which serves as data
                      catalog for the OfflineStore.
                    properties:
                      catalog:
                        type: string
                      database:
                        type: string
                      tableName:
                        type: string
                    type: object
                  disableGlueTableCreation:
                    type: boolean
                  s3StorageConfig:
                    description: |-
                      The Amazon Simple Storage (Amazon S3) location and security configuration
                      for OfflineStore.
                    properties:
                      kmsKeyID:
                        type: string
                      resolvedOutputS3URI:
                        type: string
                      s3URI:
                        type: string
                    type: object
                type: object
              onlineStoreConfig:
                description: |-
                  You can turn the OnlineStore on or off by specifying True for the EnableOnlineStore
                  flag in OnlineStoreConfig.

                  You can also include an Amazon Web Services KMS key ID (KMSKeyId) for at-rest
                  encryption of the OnlineStore.

                  The default value is False.
                properties:
                  enableOnlineStore:
                    type: boolean
                  securityConfig:
                    description: The security configuration for OnlineStore.
                    properties:
                      kmsKeyID:
                        type: string
                    type: object
                  storageType:
                    type: string
                  ttlDuration:
                    description: |-
                      Time to live duration, where the record is hard deleted after the expiration
                      time is reached; ExpiresAt = EventTime + TtlDuration. For information on
                      HardDelete, see the DeleteRecord (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_feature_store_DeleteRecord.html)
                      API in the Amazon SageMaker API Reference guide.
                    properties:
                      unit:
                        type: string
                      value:
                        format: int64
                        type: integer
                    type: object
                type: object
              recordIdentifierFeatureName:
                description: |-
                  The name of the Feature whose value uniquely identifies a Record defined
                  in the FeatureStore. Only the latest record per identifier value will be
                  stored in the OnlineStore. RecordIdentifierFeatureName must be one of feature
                  definitions' names.

                  You use the RecordIdentifierFeatureName to access data in a FeatureStore.

                  This name:

                    - Must start with an alphanumeric character.

                    - Can only contains alphanumeric characters, hyphens, underscores. Spaces
                      are not allowed.
                type: string
              roleARN:
                description: |-
                  The Amazon Resource Name (ARN) of the IAM execution role used to persist
                  data into the OfflineStore if an OfflineStoreConfig is provided.
                type: string
              tags:
                description: Tags used to identify Features in each FeatureGroup.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              throughputConfig:
                description: |-
                  Used to set feature group throughput configuration. There are two modes:
                  ON_DEMAND and PROVISIONED. With on-demand mode, you are charged for data
                  reads and writes that your application performs on your feature group. You
                  do not need to specify read and write throughput because Feature Store accommodates
                  your workloads as they ramp up and down. You can switch a feature group to
                  on-demand only once in a 24 hour period. With provisioned throughput mode,
                  you specify the read and write capacity per second that you expect your application
                  to require, and you are billed based on those limits. Exceeding provisioned
                  throughput will result in your requests being throttled.

                  Note: PROVISIONED throughput mode is supported only for feature groups that
                  are offline-only, or use the Standard (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_OnlineStoreConfig.html#sagemaker-Type-OnlineStoreConfig-StorageType)
                  tier online store.
                properties:
                  provisionedReadCapacityUnits:
                    format: int64
                    type: integer
                  provisionedWriteCapacityUnits:
                    format: int64
                    type: integer
                  throughputMode:
                    type: string
                type: object
            required:
            - eventTimeFeatureName
            - featureDefinitions
            - featureGroupName
            - recordIdentifierFeatureName
            type: object
          status:
            description: FeatureGroupStatus defines the observed state of FeatureGroup
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureReason:
                description: |-
                  The reason that the FeatureGroup failed to be replicated in the OfflineStore.
                  This is failure can occur because:

                     * The FeatureGroup could not be created in the OfflineStore.

                     * The FeatureGroup could not be deleted from the OfflineStore.
                type: string
              featureGroupStatus:
                description: The status of the feature group.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: hyperparametertuningjobs.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: HyperParameterTuningJob
    listKind: HyperParameterTuningJobList
    plural: hyperparametertuningjobs
    singular: hyperparametertuningjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.hyperParameterTuningJobStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HyperParameterTuningJob is the Schema for the HyperParameterTuningJobs
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: HyperParameterTuningJobSpec defines the desired state of
              HyperParameterTuningJob.
            properties:
              autotune:
                description: |-
                  Configures SageMaker Automatic model tuning (AMT) to automatically find optimal
                  parameters for the following fields:

                    - ParameterRanges (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html#sagemaker-Type-HyperParameterTuningJobConfig-ParameterRanges):
                      The names and ranges of parameters that a hyperparameter tuning job can
                      optimize.

                    - ResourceLimits (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html):
                      The maximum resources that can be used for a training job. These resources
                      include the maximum number of training jobs, the maximum runtime of a
                      tuning job, and the maximum number of training jobs to run at the same
                      time.

                    - TrainingJobEarlyStoppingType (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html#sagemaker-Type-HyperParameterTuningJobConfig-TrainingJobEarlyStoppingType):
                      A flag that specifies whether or not to use early stopping for training
                      jobs launched by a hyperparameter tuning job.

                    - RetryStrategy (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html#sagemaker-Type-HyperParameterTrainingJobDefinition-RetryStrategy):
                      The number of times to retry a training job.

                    - Strategy (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html):
                      Specifies how hyperparameter tuning chooses the combinations of hyperparameter
                      values to use for the training jobs that it launches.

                    - ConvergenceDetected (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ConvergenceDetected.html):
                      A flag to indicate that Automatic model tuning (AMT) has detected model
                      convergence.
                properties:
                  mode:
                    type: string
                type: object
              hyperParameterTuningJobConfig:
                description: |-
                  The HyperParameterTuningJobConfig (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html)
                  object that describes the tuning job, including the search strategy, the
                  objective metric used to evaluate training jobs, ranges of parameters to
                  search, and resource limits for the tuning job. For more information, see
                  How Hyperparameter Tuning Works (https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-how-it-works.html).
                properties:
                  hyperParameterTuningJobObjective:
                    description: |-
                      Defines the objective metric for a hyperparameter tuning job. Hyperparameter
                      tuning uses the value of this metric to evaluate the training jobs it launches,
                      and returns the training job that results in either the highest or lowest
                      value for this metric, depending on the value you specify for the Type parameter.
                      If you want to define a custom objective metric, see Define metrics and environment
                      variables (https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics-variables.html).
                    properties:
                      metricName:
                        type: string
                      type_:
                        type: string
                    type: object
                  parameterRanges:
                    description: |-
                      Specifies ranges of integer, continuous, and categorical hyperparameters
                      that a hyperparameter tuning job searches. The hyperparameter tuning job
                      launches training jobs with hyperparameter values within these ranges to
                      find the combination of values that result in the training job with the best
                      performance as measured by the objective metric of the hyperparameter tuning
                      job.

                      The maximum number of items specified for Array Members refers to the maximum
                      number of hyperparameters for each range and also the maximum for the hyperparameter
                      tuning job itself. That is, the sum of the number of hyperparameters for
                      all the ranges can't exceed the maximum number specified.
                    properties:
                      autoParameters:
                        items:
                          description: |-
                            The name and an example value of the hyperparameter that you want to use
                            in Autotune. If Automatic model tuning (AMT) determines that your hyperparameter
                            is eligible for Autotune, an optimal hyperparameter range is selected for
                            you.
                          properties:
                            name:
                              type: string
                            valueHint:
                              type: string
                          type: object
                        type: array
                      categoricalParameterRanges:
                        items:
                          description: A list of categorical hyperparameters to tune.
                          properties:
                            name:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      continuousParameterRanges:
                        items:
                          description: A list of continuous hyperparameters to tune.
                          properties:
                            maxValue:
                              type: string
                            minValue:
                              type: string
                            name:
                              type: string
                            scalingType:
                              type: string
                          type: object
                        type: array
                      integerParameterRanges:
                        items:
                          description: |-
                            For a hyperparameter of the integer type, specifies the range that a hyperparameter
                            tuning job searches.
                          properties:
                            maxValue:
                              type: string
                            minValue:
                              type: string
                            name:
                              type: string
                            scalingType:
                              type: string
                          type: object
                        type: array
                    type: object
                  resourceLimits:
                    description: |-
                      Specifies the maximum number of training jobs and parallel training jobs
                      that a hyperparameter tuning job can launch.
                    properties:
                      maxNumberOfTrainingJobs:
                        format: int64
                        type: integer
                      maxParallelTrainingJobs:
                        format: int64
                        type: integer
                    type: object
                  strategy:
                    description: |-
                      The strategy hyperparameter tuning uses to find the best combination of hyperparameters
                      for your model.
                    type: string
                  trainingJobEarlyStoppingType:
                    type: string
                  tuningJobCompletionCriteria:
                    description: The job completion criteria.
                    properties:
                      targetObjectiveMetricValue:
                        type: number
                    type: object
                type: object
              hyperParameterTuningJobName:
                description: |-
                  The name of the tuning job. This name is the prefix for the names of all
                  training jobs that this tuning job launches. The name must be unique within
                  the same Amazon Web Services account and Amazon Web Services Region. The
                  name must have 1 to 32 characters. Valid characters are a-z, A-Z, 0-9, and
                  : + = @ _ % - (hyphen). The name is not case sensitive.
                type: string
              tags:
                description: |-
                  An array of key-value pairs. You can use tags to categorize your Amazon Web
                  Services resources in different ways, for example, by purpose, owner, or
                  environment. For more information, see Tagging Amazon Web Services Resources
                  (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).

                  Tags that you specify for the tuning job are also added to all training jobs
                  that the tuning job launches.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              trainingJobDefinition:
                description: |-
                  The HyperParameterTrainingJobDefinition (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html)
                  object that describes the training jobs that this tuning job launches, including
                  static hyperparameters, input data configuration, output data configuration,
                  resource configuration, and stopping condition.
                properties:
                  algorithmSpecification:
                    description: |-
                      Specifies which training algorithm to use for training jobs that a hyperparameter
                      tuning job launches and the metrics to monitor.
                    properties:
                      algorithmName:
                        type: string
                      metricDefinitions:
                        items:
                          description: |-
                            Specifies a metric that the training algorithm writes to stderr or stdout.
                            You can view these logs to understand how your training job performs and
                            check for any errors encountered during training. SageMaker hyperparameter
                            tuning captures all defined metrics. Specify one of the defined metrics to
                            use as an objective metric using the TuningObjective (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html#sagemaker-Type-HyperParameterTrainingJobDefinition-TuningObjective)
                            parameter in the HyperParameterTrainingJobDefinition API to evaluate job
                            performance during hyperparameter tuning.
                          properties:
                            name:
                              type: string
                            regex:
                              type: string
                          type: object
                        type: array
                      trainingImage:
                        type: string
                      trainingInputMode:
                        description: |-
                          The training input mode that the algorithm supports. For more information
                          about input modes, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).

                          Pipe mode

                          If an algorithm supports Pipe mode, Amazon SageMaker streams data directly
                          from Amazon S3 to the container.

                          File mode

                          If an algorithm supports File mode, SageMaker downloads the training data
                          from S3 to the provisioned ML storage volume, and mounts the directory to
                          the Docker volume for the training container.

                          You must provision the ML storage volume with sufficient capacity to accommodate
                          the data downloaded from S3. In addition to the training data, the ML storage
                          volume also stores the output model. The algorithm container uses the ML
                          storage volume to also store intermediate information, if any.

                          For distributed algorithms, training data is distributed uniformly. Your
                          training duration is predictable if the input data objects sizes are approximately
                          the same. SageMaker does not split the files any further for model training.
                          If the object sizes are skewed, training won't be optimal as the data distribution
                          is also skewed when one host in a training cluster is overloaded, thus becoming
                          a bottleneck in training.

                          FastFile mode

                          If an algorithm supports FastFile mode, SageMaker streams data directly from
                          S3 to the container with no code changes, and provides file system access
                          to the data. Users can author their training script to interact with these
                          files as if they were stored on disk.

                          FastFile mode works best when the data is read sequentially. Augmented manifest
                          files aren't supported. The startup time is lower when there are fewer files
                          in the S3 bucket provided.
                        type: string
                    type: object
                  checkpointConfig:
                    description: |-
                      Contains information about the output location for managed spot training
                      checkpoint data.
                    properties:
                      localPath:
                        type: string
                      s3URI:
                        type: string
                    type: object
                  definitionName:
                    type: string
                  enableInterContainerTrafficEncryption:
                    type: boolean
                  enableManagedSpotTraining:
                    type: boolean
                  enableNetworkIsolation:
                    type: boolean
                  hyperParameterRanges:
                    description: |-
                      Specifies ranges of integer, continuous, and categorical hyperparameters
                      that a hyperparameter tuning job searches. The hyperparameter tuning job
                      launches training jobs with hyperparameter values within these ranges to
                      find the combination of values that result in the training job with the best
                      performance as measured by the objective metric of the hyperparameter tuning
                      job.

                      The maximum number of items specified for Array Members refers to the maximum
                      number of hyperparameters for each range and also the maximum for the hyperparameter
                      tuning job itself. That is, the sum of the number of hyperparameters for
                      all the ranges can't exceed the maximum number specified.
                    properties:
                      autoParameters:
                        items:
                          description: |-
                            The name and an example value of the hyperparameter that you want to use
                            in Autotune. If Automatic model tuning (AMT) determines that your hyperparameter
                            is eligible for Autotune, an optimal hyperparameter range is selected for
                            you.
                          properties:
                            name:
                              type: string
                            valueHint:
                              type: string
                          type: object
                        type: array
                      categoricalParameterRanges:
                        items:
                          description: A list of categorical hyperparameters to tune.
                          properties:
                            name:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      continuousParameterRanges:
                        items:
                          description: A list of continuous hyperparameters to tune.
                          properties:
                            maxValue:
                              type: string
                            minValue:
                              type: string
                            name:
                              type: string
                            scalingType:
                              type: string
                          type: object
                        type: array
                      integerParameterRanges:
                        items:
                          description: |-
                            For a hyperparameter of the integer type, specifies the range that a hyperparameter
                            tuning job searches.
                          properties:
                            maxValue:
                              type: string
                            minValue:
                              type: string
                            name:
                              type: string
                            scalingType:
                              type: string
                          type: object
                        type: array
                    type: object
                  inputDataConfig:
                    items:
                      description: A channel is a named input source that training
                        algorithms can consume.
                      properties:
                        channelName:
                          type: string
                        compressionType:
                          type: string
                        contentType:
                          type: string
                        dataSource:
                          description: Describes the location of the channel data.
                          properties:
                            fileSystemDataSource:
                              description: Specifies a file system data source for
                                a channel.
                              properties:
                                directoryPath:
                                  type: string
                                fileSystemAccessMode:
                                  type: string
                                fileSystemID:
                                  type: string
                                fileSystemType:
                                  type: string
                              type: object
                            s3DataSource:
                              description: |-
                                Describes the S3 data source.

                                Your input bucket must be in the same Amazon Web Services region as your
                                training job.
                              properties:
                                attributeNames:
                                  items:
                                    type: string
                                  type: array
                                instanceGroupNames:
                                  items:
                                    type: string
                                  type: array
                                s3DataDistributionType:
                                  type: string
                                s3DataType:
                                  type: string
                                s3URI:
                                  type: string
                              type: object
                          type: object
                        inputMode:
                          description: |-
                            The training input mode that the algorithm supports. For more information
                            about input modes, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).

                            Pipe mode

                            If an algorithm supports Pipe mode, Amazon SageMaker streams data directly
                            from Amazon S3 to the container.

                            File mode

                            If an algorithm supports File mode, SageMaker downloads the training data
                            from S3 to the provisioned ML storage volume, and mounts the directory to
                            the Docker volume for the training container.

                            You must provision the ML storage volume with sufficient capacity to accommodate
                            the data downloaded from S3. In addition to the training data, the ML storage
                            volume also stores the output model. The algorithm container uses the ML
                            storage volume to also store intermediate information, if any.

                            For distributed algorithms, training data is distributed uniformly. Your
                            training duration is predictable if the input data objects sizes are approximately
                            the same. SageMaker does not split the files any further for model training.
                            If the object sizes are skewed, training won't be optimal as the data distribution
                            is also skewed when one host in a training cluster is overloaded, thus becoming
                            a bottleneck in training.

                            FastFile mode

                            If an algorithm supports FastFile mode, SageMaker streams data directly from
                            S3 to the container with no code changes, and provides file system access
                            to the data. Users can author their training script to interact with these
                            files as if they were stored on disk.

                            FastFile mode works best when the data is read sequentially. Augmented manifest
                            files aren't supported. The startup time is lower when there are fewer files
                            in the S3 bucket provided.
                          type: string
                        recordWrapperType:
                          type: string
                        shuffleConfig:
                          description: |-
                            A configuration for a shuffle option for input data in a channel. If you
                            use S3Prefix for S3DataType, the results of the S3 key prefix matches are
                            shuffled. If you use ManifestFile, the order of the S3 object references
                            in the ManifestFile is shuffled. If you use AugmentedManifestFile, the order
                            of the JSON lines in the AugmentedManifestFile is shuffled. The shuffling
                            order is determined using the Seed value.

                            For Pipe input mode, when ShuffleConfig is specified shuffling is done at
                            the start of every epoch. With large datasets, this ensures that the order
                            of the training data is different for each epoch, and it helps reduce bias
                            and possible overfitting. In a multi-node training job when ShuffleConfig
                            is combined with S3DataDistributionType of ShardedByS3Key, the data is shuffled
                            across nodes so that the content sent to a particular node on the first epoch
                            might be sent to a different node on the second epoch.
                          properties:
                            seed:
                              format: int64
                              type: integer
                          type: object
                      type: object
                    type: array
                  outputDataConfig:
                    description: Provides information about how to store model training
                      results (model artifacts).
                    properties:
                      compressionType:
                        type: string
                      kmsKeyID:
                        type: string
                      s3OutputPath:
                        type: string
                    type: object
                  resourceConfig:
                    description: |-
                      Describes the resources, including machine learning (ML) compute instances
                      and ML storage volumes, to use for model training.
                    properties:
                      instanceCount:
                        format: int64
                        type: integer
                      instanceGroups:
                        items:
                          description: |-
                            Defines an instance group for heterogeneous cluster training. When requesting
                            a training job using the CreateTrainingJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html)
                            API, you can configure multiple instance groups .
                          properties:
                            instanceCount:
                              format: int64
                              type: integer
                            instanceGroupName:
                              type: string
                            instanceType:
                              type: string
                          type: object
                        type: array
                      instanceType:
                        type: string
                      keepAlivePeriodInSeconds:
                        description: |-
                          Optional. Customer requested period in seconds for which the Training cluster
                          is kept alive after the job is finished.
                        format: int64
                        type: integer
                      volumeKMSKeyID:
                        type: string
                      volumeSizeInGB:
                        format: int64
                        type: integer
                    type: object
                  retryStrategy:
                    description: |-
                      The retry strategy to use when a training job fails due to an InternalServerError.
                      RetryStrategy is specified as part of the CreateTrainingJob and CreateHyperParameterTuningJob
                      requests. You can add the StoppingCondition parameter to the request to limit
                      the training time for the complete job.
                    properties:
                      maximumRetryAttempts:
                        format: int64
                        type: integer
                    type: object
                  roleARN:
                    type: string
                  staticHyperParameters:
                    additionalProperties:
                      type: string
                    type: object
                  stoppingCondition:
                    description: |-
                      Specifies a limit to how long a job can run. When the job reaches the time
                      limit, SageMaker ends the job. Use this API to cap costs.

                      To stop a training job, SageMaker sends the algorithm the SIGTERM signal,
                      which delays job termination for 120 seconds. Algorithms can use this 120-second
                      window to save the model artifacts, so the results of training are not lost.

                      The training algorithms provided by SageMaker automatically save the intermediate
                      results of a model training job when possible. This attempt to save artifacts
                      is only a best effort case as model might not be in a state from which it
                      can be saved. For example, if training has just started, the model might
                      not be ready to save. When saved, this intermediate data is a valid model
                      artifact. You can use it to create a model with CreateModel.

                      The Neural Topic Model (NTM) currently does not support saving intermediate
                      model artifacts. When training NTMs, make sure that the maximum runtime is
                      sufficient for the training job to complete.
                    properties:
                      maxPendingTimeInSeconds:
                        description: Maximum job scheduler pending time in seconds.
                        format: int64
                        type: integer
                      maxRuntimeInSeconds:
                        format: int64
                        type: integer
                      maxWaitTimeInSeconds:
                        format: int64
                        type: integer
                    type: object
                  tuningObjective:
                    description: |-
                      Defines the objective metric for a hyperparameter tuning job. Hyperparameter
                      tuning uses the value of this metric to evaluate the training jobs it launches,
                      and returns the training job that results in either the highest or lowest
                      value for this metric, depending on the value you specify for the Type parameter.
                      If you want to define a custom objective metric, see Define metrics and environment
                      variables (https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics-variables.html).
                    properties:
                      metricName:
                        type: string
                      type_:
                        type: string
                    type: object
                  vpcConfig:
                    description: |-
                      Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                      hosted models, and compute resources have access to. You can control access
                      to and from your resources by configuring a VPC. For more information, see
                      Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                    properties:
                      securityGroupIDs:
                        items:
                          type: string
                        type: array
                      subnets:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              trainingJobDefinitions:
                description: |-
                  A list of the HyperParameterTrainingJobDefinition (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html)
                  objects launched for this tuning job.
                items:
                  description: Defines the training jobs launched by a hyperparameter
                    tuning job.
                  properties:
                    algorithmSpecification:
                      description: |-
                        Specifies which training algorithm to use for training jobs that a hyperparameter
                        tuning job launches and the metrics to monitor.
                      properties:
                        algorithmName:
                          type: string
                        metricDefinitions:
                          items:
                            description: |-
                              Specifies a metric that the training algorithm writes to stderr or stdout.
                              You can view these logs to understand how your training job performs and
                              check for any errors encountered during training. SageMaker hyperparameter
                              tuning captures all defined metrics. Specify one of the defined metrics to
                              use as an objective metric using the TuningObjective (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html#sagemaker-Type-HyperParameterTrainingJobDefinition-TuningObjective)
                              parameter in the HyperParameterTrainingJobDefinition API to evaluate job
                              performance during hyperparameter tuning.
                            properties:
                              name:
                                type: string
                              regex:
                                type: string
                            type: object
                          type: array
                        trainingImage:
                          type: string
                        trainingInputMode:
                          description: |-
                            The training input mode that the algorithm supports. For more information
                            about input modes, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).

                            Pipe mode

                            If an algorithm supports Pipe mode, Amazon SageMaker streams data directly
                            from Amazon S3 to the container.

                            File mode

                            If an algorithm supports File mode, SageMaker downloads the training data
                            from S3 to the provisioned ML storage volume, and mounts the directory to
                            the Docker volume for the training container.

                            You must provision the ML storage volume with sufficient capacity to accommodate
                            the data downloaded from S3. In addition to the training data, the ML storage
                            volume also stores the output model. The algorithm container uses the ML
                            storage volume to also store intermediate information, if any.

                            For distributed algorithms, training data is distributed uniformly. Your
                            training duration is predictable if the input data objects sizes are approximately
                            the same. SageMaker does not split the files any further for model training.
                            If the object sizes are skewed, training won't be optimal as the data distribution
                            is also skewed when one host in a training cluster is overloaded, thus becoming
                            a bottleneck in training.

                            FastFile mode

                            If an algorithm supports FastFile mode, SageMaker streams data directly from
                            S3 to the container with no code changes, and provides file system access
                            to the data. Users can author their training script to interact with these
                            files as if they were stored on disk.

                            FastFile mode works best when the data is read sequentially. Augmented manifest
                            files aren't supported. The startup time is lower when there are fewer files
                            in the S3 bucket provided.
                          type: string
                      type: object
                    checkpointConfig:
                      description: |-
                        Contains information about the output location for managed spot training
                        checkpoint data.
                      properties:
                        localPath:
                          type: string
                        s3URI:
                          type: string
                      type: object
                    definitionName:
                      type: string
                    enableInterContainerTrafficEncryption:
                      type: boolean
                    enableManagedSpotTraining:
                      type: boolean
                    enableNetworkIsolation:
                      type: boolean
                    hyperParameterRanges:
                      description: |-
                        Specifies ranges of integer, continuous, and categorical hyperparameters
                        that a hyperparameter tuning job searches. The hyperparameter tuning job
                        launches training jobs with hyperparameter values within these ranges to
                        find the combination of values that result in the training job with the best
                        performance as measured by the objective metric of the hyperparameter tuning
                        job.

                        The maximum number of items specified for Array Members refers to the maximum
                        number of hyperparameters for each range and also the maximum for the hyperparameter
                        tuning job itself. That is, the sum of the number of hyperparameters for
                        all the ranges can't exceed the maximum number specified.
                      properties:
                        autoParameters:
                          items:
                            description: |-
                              The name and an example value of the hyperparameter that you want to use
                              in Autotune. If Automatic model tuning (AMT) determines that your hyperparameter
                              is eligible for Autotune, an optimal hyperparameter range is selected for
                              you.
                            properties:
                              name:
                                type: string
                              valueHint:
                                type: string
                            type: object
                          type: array
                        categoricalParameterRanges:
                          items:
                            description: A list of categorical hyperparameters to
                              tune.
                            properties:
                              name:
                                type: string
                              values:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        continuousParameterRanges:
                          items:
                            description: A list of continuous hyperparameters to tune.
                            properties:
                              maxValue:
                                type: string
                              minValue:
                                type: string
                              name:
                                type: string
                              scalingType:
                                type: string
                            type: object
                          type: array
                        integerParameterRanges:
                          items:
                            description: |-
                              For a hyperparameter of the integer type, specifies the range that a hyperparameter
                              tuning job searches.
                            properties:
                              maxValue:
                                type: string
                              minValue:
                                type: string
                              name:
                                type: string
                              scalingType:
                                type: string
                            type: object
                          type: array
                      type: object
                    inputDataConfig:
                      items:
                        description: A channel is a named input source that training
                          algorithms can consume.
                        properties:
                          channelName:
                            type: string
                          compressionType:
                            type: string
                          contentType:
                            type: string
                          dataSource:
                            description: Describes the location of the channel data.
                            properties:
                              fileSystemDataSource:
                                description: Specifies a file system data source for
                                  a channel.
                                properties:
                                  directoryPath:
                                    type: string
                                  fileSystemAccessMode:
                                    type: string
                                  fileSystemID:
                                    type: string
                                  fileSystemType:
                                    type: string
                                type: object
                              s3DataSource:
                                description: |-
                                  Describes the S3 data source.

                                  Your input bucket must be in the same Amazon Web Services region as your
                                  training job.
                                properties:
                                  attributeNames:
                                    items:
                                      type: string
                                    type: array
                                  instanceGroupNames:
                                    items:
                                      type: string
                                    type: array
                                  s3DataDistributionType:
                                    type: string
                                  s3DataType:
                                    type: string
                                  s3URI:
                                    type: string
                                type: object
                            type: object
                          inputMode:
                            description: |-
                              The training input mode that the algorithm supports. For more information
                              about input modes, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).

                              Pipe mode

                              If an algorithm supports Pipe mode, Amazon SageMaker streams data directly
                              from Amazon S3 to the container.

                              File mode

                              If an algorithm supports File mode, SageMaker downloads the training data
                              from S3 to the provisioned ML storage volume, and mounts the directory to
                              the Docker volume for the training container.

                              You must provision the ML storage volume with sufficient capacity to accommodate
                              the data downloaded from S3. In addition to the training data, the ML storage
                              volume also stores the output model. The algorithm container uses the ML
                              storage volume to also store intermediate information, if any.

                              For distributed algorithms, training data is distributed uniformly. Your
                              training duration is predictable if the input data objects sizes are approximately
                              the same. SageMaker does not split the files any further for model training.
                              If the object sizes are skewed, training won't be optimal as the data distribution
                              is also skewed when one host in a training cluster is overloaded, thus becoming
                              a bottleneck in training.

                              FastFile mode

                              If an algorithm supports FastFile mode, SageMaker streams data directly from
                              S3 to the container with no code changes, and provides file system access
                              to the data. Users can author their training script to interact with these
                              files as if they were stored on disk.

                              FastFile mode works best when the data is read sequentially. Augmented manifest
                              files aren't supported. The startup time is lower when there are fewer files
                              in the S3 bucket provided.
                            type: string
                          recordWrapperType:
                            type: string
                          shuffleConfig:
                            description: |-
                              A configuration for a shuffle option for input data in a channel. If you
                              use S3Prefix for S3DataType, the results of the S3 key prefix matches are
                              shuffled. If you use ManifestFile, the order of the S3 object references
                              in the ManifestFile is shuffled. If you use AugmentedManifestFile, the order
                              of the JSON lines in the AugmentedManifestFile is shuffled. The shuffling
                              order is determined using the Seed value.

                              For Pipe input mode, when ShuffleConfig is specified shuffling is done at
                              the start of every epoch. With large datasets, this ensures that the order
                              of the training data is different for each epoch, and it helps reduce bias
                              and possible overfitting. In a multi-node training job when ShuffleConfig
                              is combined with S3DataDistributionType of ShardedByS3Key, the data is shuffled
                              across nodes so that the content sent to a particular node on the first epoch
                              might be sent to a different node on the second epoch.
                            properties:
                              seed:
                                format: int64
                                type: integer
                            type: object
                        type: object
                      type: array
                    outputDataConfig:
                      description: Provides information about how to store model training
                        results (model artifacts).
                      properties:
                        compressionType:
                          type: string
                        kmsKeyID:
                          type: string
                        s3OutputPath:
                          type: string
                      type: object
                    resourceConfig:
                      description: |-
                        Describes the resources, including machine learning (ML) compute instances
                        and ML storage volumes, to use for model training.
                      properties:
                        instanceCount:
                          format: int64
                          type: integer
                        instanceGroups:
                          items:
                            description: |-
                              Defines an instance group for heterogeneous cluster training. When requesting
                              a training job using the CreateTrainingJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html)
                              API, you can configure multiple instance groups .
                            properties:
                              instanceCount:
                                format: int64
                                type: integer
                              instanceGroupName:
                                type: string
                              instanceType:
                                type: string
                            type: object
                          type: array
                        instanceType:
                          type: string
                        keepAlivePeriodInSeconds:
                          description: |-
                            Optional. Customer requested period in seconds for which the Training cluster
                            is kept alive after the job is finished.
                          format: int64
                          type: integer
                        volumeKMSKeyID:
                          type: string
                        volumeSizeInGB:
                          format: int64
                          type: integer
                      type: object
                    retryStrategy:
                      description: |-
                        The retry strategy to use when a training job fails due to an InternalServerError.
                        RetryStrategy is specified as part of the CreateTrainingJob and CreateHyperParameterTuningJob
                        requests. You can add the StoppingCondition parameter to the request to limit
                        the training time for the complete job.
                      properties:
                        maximumRetryAttempts:
                          format: int64
                          type: integer
                      type: object
                    roleARN:
                      type: string
                    staticHyperParameters:
                      additionalProperties:
                        type: string
                      type: object
                    stoppingCondition:
                      description: |-
                        Specifies a limit to how long a job can run. When the job reaches the time
                        limit, SageMaker ends the job. Use this API to cap costs.

                        To stop a training job, SageMaker sends the algorithm the SIGTERM signal,
                        which delays job termination for 120 seconds. Algorithms can use this 120-second
                        window to save the model artifacts, so the results of training are not lost.

                        The training algorithms provided by SageMaker automatically save the intermediate
                        results of a model training job when possible. This attempt to save artifacts
                        is only a best effort case as model might not be in a state from which it
                        can be saved. For example, if training has just started, the model might
                        not be ready to save. When saved, this intermediate data is a valid model
                        artifact. You can use it to create a model with CreateModel.

                        The Neural Topic Model (NTM) currently does not support saving intermediate
                        model artifacts. When training NTMs, make sure that the maximum runtime is
                        sufficient for the training job to complete.
                      properties:
                        maxPendingTimeInSeconds:
                          description: Maximum job scheduler pending time in seconds.
                          format: int64
                          type: integer
                        maxRuntimeInSeconds:
                          format: int64
                          type: integer
                        maxWaitTimeInSeconds:
                          format: int64
                          type: integer
                      type: object
                    tuningObjective:
                      description: |-
                        Defines the objective metric for a hyperparameter tuning job. Hyperparameter
                        tuning uses the value of this metric to evaluate the training jobs it launches,
                        and returns the training job that results in either the highest or lowest
                        value for this metric, depending on the value you specify for the Type parameter.
                        If you want to define a custom objective metric, see Define metrics and environment
                        variables (https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics-variables.html).
                      properties:
                        metricName:
                          type: string
                        type_:
                          type: string
                      type: object
                    vpcConfig:
                      description: |-
                        Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                        hosted models, and compute resources have access to. You can control access
                        to and from your resources by configuring a VPC. For more information, see
                        Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                      properties:
                        securityGroupIDs:
                          items:
                            type: string
                          type: array
                        subnets:
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
                type: array
              warmStartConfig:
                description: |-
                  Specifies the configuration for starting the hyperparameter tuning job using
                  one or more previous tuning jobs as a starting point. The results of previous
                  tuning jobs are used to inform which combinations of hyperparameters to search
                  over in the new tuning job.

                  All training jobs launched by the new hyperparameter tuning job are evaluated
                  by using the objective metric. If you specify IDENTICAL_DATA_AND_ALGORITHM
                  as the WarmStartType value for the warm start configuration, the training
                  job that performs the best in the new tuning job is compared to the best
                  training jobs from the parent tuning jobs. From these, the training job that
                  performs the best as measured by the objective metric is returned as the
                  overall best training job.

                  All training jobs launched by parent hyperparameter tuning jobs and the new
                  hyperparameter tuning jobs count against the limit of training jobs for the
                  tuning job.
                properties:
                  parentHyperParameterTuningJobs:
                    items:
                      description: |-
                        A previously completed or stopped hyperparameter tuning job to be used as
                        a starting point for a new hyperparameter tuning job.
                      properties:
                        hyperParameterTuningJobName:
                          type: string
                      type: object
                    type: array
                  warmStartType:
                    type: string
                type: object
            required:
            - hyperParameterTuningJobConfig
            - hyperParameterTuningJobName
            type: object
          status:
            description: HyperParameterTuningJobStatus defines the observed state
              of HyperParameterTuningJob
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              bestTrainingJob:
                description: |-
                  A TrainingJobSummary (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_TrainingJobSummary.html)
                  object that describes the training job that completed with the best current
                  HyperParameterTuningJobObjective (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobObjective.html).
                properties:
                  creationTime:
                    format: date-time
                    type: string
                  failureReason:
                    type: string
                  finalHyperParameterTuningJobObjectiveMetric:
                    description: |-
                      Shows the latest objective metric emitted by a training job that was launched
                      by a hyperparameter tuning job. You define the objective metric in the HyperParameterTuningJobObjective
                      parameter of HyperParameterTuningJobConfig (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html).
                    properties:
                      metricName:
                        type: string
                      type_:
                        type: string
                      value:
                        type: number
                    type: object
                  objectiveStatus:
                    type: string
                  trainingEndTime:
                    format: date-time
                    type: string
                  trainingJobARN:
                    type: string
                  trainingJobDefinitionName:
                    type: string
                  trainingJobName:
                    type: string
                  trainingJobStatus:
                    type: string
                  trainingStartTime:
                    format: date-time
                    type: string
                  tunedHyperParameters:
                    additionalProperties:
                      type: string
                    type: object
                  tuningJobName:
                    type: string
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureReason:
                description: If the tuning job failed, the reason it failed.
                type: string
              hyperParameterTuningJobStatus:
                description: The status of the tuning job.
                type: string
              overallBestTrainingJob:
                description: |-
                  If the hyperparameter tuning job is an warm start tuning job with a WarmStartType
                  of IDENTICAL_DATA_AND_ALGORITHM, this is the TrainingJobSummary (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_TrainingJobSummary.html)
                  for the training job with the best objective metric value of all training
                  jobs launched by this tuning job and all parent jobs specified for the warm
                  start tuning job.
                properties:
                  creationTime:
                    format: date-time
                    type: string
                  failureReason:
                    type: string
                  finalHyperParameterTuningJobObjectiveMetric:
                    description: |-
                      Shows the latest objective metric emitted by a training job that was launched
                      by a hyperparameter tuning job. You define the objective metric in the HyperParameterTuningJobObjective
                      parameter of HyperParameterTuningJobConfig (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html).
                    properties:
                      metricName:
                        type: string
                      type_:
                        type: string
                      value:
                        type: number
                    type: object
                  objectiveStatus:
                    type: string
                  trainingEndTime:
                    format: date-time
                    type: string
                  trainingJobARN:
                    type: string
                  trainingJobDefinitionName:
                    type: string
                  trainingJobName:
                    type: string
                  trainingJobStatus:
                    type: string
                  trainingStartTime:
                    format: date-time
                    type: string
                  tunedHyperParameters:
                    additionalProperties:
                      type: string
                    type: object
                  tuningJobName:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: inferencecomponents.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: InferenceComponent
    listKind: InferenceComponentList
    plural: inferencecomponents
    singular: inferencecomponent
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.inferenceComponentStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InferenceComponent is the Schema for the InferenceComponents
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InferenceComponentSpec defines the desired state of InferenceComponent.
            properties:
              endpointName:
                description: The name of an existing endpoint where you host the inference
                  component.
                type: string
              inferenceComponentName:
                description: A unique name to assign to the inference component.
                type: string
              runtimeConfig:
                description: Runtime settings for a model that is deployed with an
                  inference component.
                properties:
                  copyCount:
                    format: int64
                    type: integer
                type: object
              specification:
                description: |-
                  Details about the resources to deploy with this inference component, including
                  the model, container, and compute resources.
                properties:
                  computeResourceRequirements:
                    description: |-
                      Defines the compute resources to allocate to run a model, plus any adapter
                      models, that you assign to an inference component. These resources include
                      CPU cores, accelerators, and memory.
                    properties:
                      maxMemoryRequiredInMb:
                        format: int64
                        type: integer
                      minMemoryRequiredInMb:
                        format: int64
                        type: integer
                      numberOfAcceleratorDevicesRequired:
                        type: number
                      numberOfCPUCoresRequired:
                        type: number
                    type: object
                  container:
                    description: |-
                      Defines a container that provides the runtime environment for a model that
                      you deploy with an inference component.
                    properties:
                      artifactURL:
                        type: string
                      environment:
                        additionalProperties:
                          type: string
                        type: object
                      image:
                        type: string
                    type: object
                  modelName:
                    type: string
                  startupParameters:
                    description: Settings that take effect while the model container
                      starts up.
                    properties:
                      containerStartupHealthCheckTimeoutInSeconds:
                        format: int64
                        type: integer
                      modelDataDownloadTimeoutInSeconds:
                        format: int64
                        type: integer
                    type: object
                type: object
              tags:
                description: |-
                  A list of key-value pairs associated with the model. For more information,
                  see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
                  in the Amazon Web Services General Reference.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              variantName:
                description: The name of an existing production variant where you
                  host the inference component.
                type: string
            required:
            - endpointName
            - inferenceComponentName
            - specification
            type: object
          status:
            description: InferenceComponentStatus defines the observed state of InferenceComponent
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: The time when the inference component was created.
                format: date-time
                type: string
              endpointName:
                description: The name of the endpoint that hosts the inference component.
                type: string
              failureReason:
                description: If the inference component status is Failed, the reason
                  for the failure.
                type: string
              inferenceComponentStatus:
                description: The status of the inference component.
                type: string
              lastModifiedTime:
                description: The time when the inference component was last updated.
                format: date-time
                type: string
              variantName:
                description: The name of the production variant that hosts the inference
                  component.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: modelbiasjobdefinitions.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: ModelBiasJobDefinition
    listKind: ModelBiasJobDefinitionList
    plural: modelbiasjobdefinitions
    singular: modelbiasjobdefinition
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ModelBiasJobDefinition is the Schema for the ModelBiasJobDefinitions
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ModelBiasJobDefinitionSpec defines the desired state of ModelBiasJobDefinition.
            properties:
              jobDefinitionName:
                description: |-
                  The name of the bias job definition. The name must be unique within an Amazon
                  Web Services Region in the Amazon Web Services account.
                type: string
              jobResources:
                description: Identifies the resources to deploy for a monitoring job.
                properties:
                  clusterConfig:
                    description: Configuration for the cluster used to run model monitoring
                      jobs.
                    properties:
                      instanceCount:
                        format: int64
                        type: integer
                      instanceType:
                        type: string
                      volumeKMSKeyID:
                        type: string
                      volumeSizeInGB:
                        format: int64
                        type: integer
                    type: object
                type: object
              modelBiasAppSpecification:
                description: Configures the model bias job to run a specified Docker
                  container image.
                properties:
                  configURI:
                    type: string
                  environment:
                    additionalProperties:
                      type: string
                    type: object
                  imageURI:
                    type: string
                type: object
              modelBiasBaselineConfig:
                description: The baseline configuration for a model bias job.
                properties:
                  baseliningJobName:
                    type: string
                  constraintsResource:
                    description: The constraints resource for a monitoring job.
                    properties:
                      s3URI:
                        type: string
                    type: object
                type: object
              modelBiasJobInput:
                description: Inputs for the model bias job.
                properties:
                  endpointInput:
                    description: Input object for the endpoint
                    properties:
                      endTimeOffset:
                        type: string
                      endpointName:
                        type: string
                      excludeFeaturesAttribute:
                        type: string
                      featuresAttribute:
                        type: string
                      inferenceAttribute:
                        type: string
                      localPath:
                        type: string
                      probabilityAttribute:
                        type: string
                      probabilityThresholdAttribute:
                        type: number
                      s3DataDistributionType:
                        type: string
                      s3InputMode:
                        type: string
                      startTimeOffset:
                        type: string
                    type: object
                  groundTruthS3Input:
                    description: The ground truth labels for the dataset used for
                      the monitoring job.
                    properties:
                      s3URI:
                        type: string
                    type: object
                type: object
              modelBiasJobOutputConfig:
                description: The output configuration for monitoring jobs.
                properties:
                  kmsKeyID:
                    type: string
                  monitoringOutputs:
                    items:
                      description: The output object for a monitoring job.
                      properties:
                        s3Output:
                          description: |-
                            Information about where and how you want to store the results of a monitoring
                            job.
                          properties:
                            localPath:
                              type: string
                            s3URI:
                              type: string
                            s3UploadMode:
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
              networkConfig:
                description: Networking options for a model bias job.
                properties:
                  enableInterContainerTrafficEncryption:
                    type: boolean
                  enableNetworkIsolation:
                    type: boolean
                  vpcConfig:
                    description: |-
                      Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                      hosted models, and compute resources have access to. You can control access
                      to and from your resources by configuring a VPC. For more information, see
                      Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                    properties:
                      securityGroupIDs:
                        items:
                          type: string
                        type: array
                      subnets:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              roleARN:
                description: |-
                  The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume
                  to perform tasks on your behalf.
                type: string
              stoppingCondition:
                description: A time limit for how long the monitoring job is allowed
                  to run before stopping.
                properties:
                  maxRuntimeInSeconds:
                    format: int64
                    type: integer
                type: object
              tags:
                description: |-
                  (Optional) An array of key-value pairs. For more information, see Using Cost
                  Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL)
                  in the Amazon Web Services Billing and Cost Management User Guide.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - jobDefinitionName
            - jobResources
            - modelBiasAppSpecification
            - modelBiasJobInput
            - modelBiasJobOutputConfig
            - roleARN
            type: object
          status:
            description: ModelBiasJobDefinitionStatus defines the observed state of
              ModelBiasJobDefinition
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: modelexplainabilityjobdefinitions.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: ModelExplainabilityJobDefinition
    listKind: ModelExplainabilityJobDefinitionList
    plural: modelexplainabilityjobdefinitions
    singular: modelexplainabilityjobdefinition
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ModelExplainabilityJobDefinition is the Schema for the ModelExplainabilityJobDefinitions
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ModelExplainabilityJobDefinitionSpec defines the desired
              state of ModelExplainabilityJobDefinition.
            properties:
              jobDefinitionName:
                description: |-
                  The name of the model explainability job definition. The name must be unique
                  within an Amazon Web Services Region in the Amazon Web Services account.
                type: string
              jobResources:
                description: Identifies the resources to deploy for a monitoring job.
                properties:
                  clusterConfig:
                    description: Configuration for the cluster used to run model monitoring
                      jobs.
                    properties:
                      instanceCount:
                        format: int64
                        type: integer
                      instanceType:
                        type: string
                      volumeKMSKeyID:
                        type: string
                      volumeSizeInGB:
                        format: int64
                        type: integer
                    type: object
                type: object
              modelExplainabilityAppSpecification:
                description: |-
                  Configures the model explainability job to run a specified Docker container
                  image.
                properties:
                  configURI:
                    type: string
                  environment:
                    additionalProperties:
                      type: string
                    type: object
                  imageURI:
                    type: string
                type: object
              modelExplainabilityBaselineConfig:
                description: The baseline configuration for a model explainability
                  job.
                properties:
                  baseliningJobName:
                    type: string
                  constraintsResource:
                    description: The constraints resource for a monitoring job.
                    properties:
                      s3URI:
                        type: string
                    type: object
                type: object
              modelExplainabilityJobInput:
                description: Inputs for the model explainability job.
                properties:
                  endpointInput:
                    description: Input object for the endpoint
                    properties:
                      endTimeOffset:
                        type: string
                      endpointName:
                        type: string
                      excludeFeaturesAttribute:
                        type: string
                      featuresAttribute:
                        type: string
                      inferenceAttribute:
                        type: string
                      localPath:
                        type: string
                      probabilityAttribute:
                        type: string
                      probabilityThresholdAttribute:
                        type: number
                      s3DataDistributionType:
                        type: string
                      s3InputMode:
                        type: string
                      startTimeOffset:
                        type: string
                    type: object
                type: object
              modelExplainabilityJobOutputConfig:
                description: The output configuration for monitoring jobs.
                properties:
                  kmsKeyID:
                    type: string
                  monitoringOutputs:
                    items:
                      description: The output object for a monitoring job.
                      properties:
                        s3Output:
                          description: |-
                            Information about where and how you want to store the results of a monitoring
                            job.
                          properties:
                            localPath:
                              type: string
                            s3URI:
                              type: string
                            s3UploadMode:
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
              networkConfig:
                description: Networking options for a model explainability job.
                properties:
                  enableInterContainerTrafficEncryption:
                    type: boolean
                  enableNetworkIsolation:
                    type: boolean
                  vpcConfig:
                    description: |-
                      Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                      hosted models, and compute resources have access to. You can control access
                      to and from your resources by configuring a VPC. For more information, see
                      Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                    properties:
                      securityGroupIDs:
                        items:
                          type: string
                        type: array
                      subnets:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              roleARN:
                description: |-
                  The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume
                  to perform tasks on your behalf.
                type: string
              stoppingCondition:
                description: A time limit for how long the monitoring job is allowed
                  to run before stopping.
                properties:
                  maxRuntimeInSeconds:
                    format: int64
                    type: integer
                type: object
              tags:
                description: |-
                  (Optional) An array of key-value pairs. For more information, see Using Cost
                  Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL)
                  in the Amazon Web Services Billing and Cost Management User Guide.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - jobDefinitionName
            - jobResources
            - modelExplainabilityAppSpecification
            - modelExplainabilityJobInput
            - modelExplainabilityJobOutputConfig
            - roleARN
            type: object
          status:
            description: ModelExplainabilityJobDefinitionStatus defines the observed
              state of ModelExplainabilityJobDefinition
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: modelpackagegroups.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: ModelPackageGroup
    listKind: ModelPackageGroupList
    plural: modelpackagegroups
    singular: modelpackagegroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.modelPackageGroupStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ModelPackageGroup is the Schema for the ModelPackageGroups API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ModelPackageGroupSpec defines the desired state of ModelPackageGroup.

              A group of versioned models in the model registry.
            properties:
              modelPackageGroupDescription:
                description: A description for the model group.
                type: string
              modelPackageGroupName:
                description: The name of the model group.
                type: string
              tags:
                description: |-
                  A list of key value pairs associated with the model group. For more information,
                  see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
                  in the Amazon Web Services General Reference Guide.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - modelPackageGroupName
            type: object
          status:
            description: ModelPackageGroupStatus defines the observed state of ModelPackageGroup
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              modelPackageGroupStatus:
                description: The status of the model group.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: modelpackages.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: ModelPackage
    listKind: ModelPackageList
    plural: modelpackages
    singular: modelpackage
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.modelPackageStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ModelPackage is the Schema for the ModelPackages API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ModelPackageSpec defines the desired state of ModelPackage.

              A versioned model that can be deployed for SageMaker inference.
            properties:
              additionalInferenceSpecifications:
                description: |-
                  An array of additional Inference Specification objects. Each additional Inference
                  Specification specifies artifacts based on this model package that can be
                  used on inference endpoints. Generally used with SageMaker Neo to store the
                  compiled artifacts.
                items:
                  description: |-
                    A structure of additional Inference Specification. Additional Inference Specification
                    specifies details about inference jobs that can be run with models based
                    on this model package
                  properties:
                    containers:
                      items:
                        description: Describes the Docker container for the model
                          package.
                        properties:
                          additionalS3DataSource:
                            description: |-
                              A data source used for training or inference that is in addition to the input
                              dataset or model data.
                            properties:
                              compressionType:
                                type: string
                              s3DataType:
                                type: string
                              s3URI:
                                type: string
                            type: object
                          containerHostname:
                            type: string
                          environment:
                            additionalProperties:
                              type: string
                            type: object
                          framework:
                            type: string
                          frameworkVersion:
                            type: string
                          image:
                            type: string
                          imageDigest:
                            type: string
                          modelDataURL:
                            type: string
                          modelInput:
                            description: Input object for the model.
                            properties:
                              dataInputConfig:
                                type: string
                            type: object
                          nearestModelName:
                            type: string
                          productID:
                            type: string
                        type: object
                      type: array
                    description:
                      type: string
                    name:
                      type: string
                    supportedContentTypes:
                      items:
                        type: string
                      type: array
                    supportedRealtimeInferenceInstanceTypes:
                      items:
                        type: string
                      type: array
                    supportedResponseMIMETypes:
                      items:
                        type: string
                      type: array
                    supportedTransformInstanceTypes:
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              approvalDescription:
                description: A description for the approval status of the model.
                type: string
              certifyForMarketplace:
                description: |-
                  Whether to certify the model package for listing on Amazon Web Services Marketplace.

                  This parameter is optional for unversioned models, and does not apply to
                  versioned models.
                type: boolean
              clientToken:
                description: A unique token that guarantees that the call to this
                  API is idempotent.
                type: string
              customerMetadataProperties:
                additionalProperties:
                  type: string
                description: The metadata properties associated with the model package
                  versions.
                type: object
              domain:
                description: |-
                  The machine learning domain of your model package and its components. Common
                  machine learning domains include computer vision and natural language processing.
                type: string
              driftCheckBaselines:
                description: |-
                  Represents the drift check baselines that can be used when the model monitor
                  is set using the model package. For more information, see the topic on Drift
                  Detection against Previous Baselines in SageMaker Pipelines (https://docs.aws.amazon.com/sagemaker/latest/dg/pipelines-quality-clarify-baseline-lifecycle.html#pipelines-quality-clarify-baseline-drift-detection)
                  in the Amazon SageMaker Developer Guide.
                properties:
                  bias:
                    description: |-
                      Represents the drift check bias baselines that can be used when the model
                      monitor is set using the model package.
                    properties:
                      configFile:
                        description: Contains details regarding the file source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                      postTrainingConstraints:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                      preTrainingConstraints:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                    type: object
                  explainability:
                    description: |-
                      Represents the drift check explainability baselines that can be used when
                      the model monitor is set using the model package.
                    properties:
                      configFile:
                        description: Contains details regarding the file source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                      constraints:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                    type: object
                  modelDataQuality:
                    description: |-
                      Represents the drift check data quality baselines that can be used when the
                      model monitor is set using the model package.
                    properties:
                      constraints:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                      statistics:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                    type: object
                  modelQuality:
                    description: |-
                      Represents the drift check model quality baselines that can be used when
                      the model monitor is set using the model package.
                    properties:
                      constraints:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                      statistics:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                    type: object
                type: object
              inferenceSpecification:
                description: |-
                  Specifies details about inference jobs that you can run with models based
                  on this model package, including the following information:

                    - The Amazon ECR paths of containers that contain the inference code and
                      model artifacts.

                    - The instance types that the model package supports for transform jobs
                      and real-time endpoints used for inference.

                    - The input and output content formats that the model package supports
                      for inference.
                properties:
                  containers:
                    items:
                      description: Describes the Docker container for the model package.
                      properties:
                        additionalS3DataSource:
                          description: |-
                            A data source used for training or inference that is in addition to the input
                            dataset or model data.
                          properties:
                            compressionType:
                              type: string
                            s3DataType:
                              type: string
                            s3URI:
                              type: string
                          type: object
                        containerHostname:
                          type: string
                        environment:
                          additionalProperties:
                            type: string
                          type: object
                        framework:
                          type: string
                        frameworkVersion:
                          type: string
                        image:
                          type: string
                        imageDigest:
                          type: string
                        modelDataURL:
                          type: string
                        modelInput:
                          description: Input object for the model.
                          properties:
                            dataInputConfig:
                              type: string
                          type: object
                        nearestModelName:
                          type: string
                        productID:
                          type: string
                      type: object
                    type: array
                  supportedContentTypes:
                    items:
                      type: string
                    type: array
                  supportedRealtimeInferenceInstanceTypes:
                    items:
                      type: string
                    type: array
                  supportedResponseMIMETypes:
                    items:
                      type: string
                    type: array
                  supportedTransformInstanceTypes:
                    items:
                      type: string
                    type: array
                type: object
              metadataProperties:
                description: Metadata properties of the tracking entity, trial, or
                  trial component.
                properties:
                  commitID:
                    type: string
                  generatedBy:
                    type: string
                  projectID:
                    type: string
                  repository:
                    type: string
                type: object
              modelApprovalStatus:
                description: |-
                  Whether the model is approved for deployment.

                  This parameter is optional for versioned models, and does not apply to unversioned
                  models.

                  For versioned models, the value of this parameter must be set to Approved
                  to deploy the model.
                type: string
              modelMetrics:
                description: A structure that contains model metrics reports.
                properties:
                  bias:
                    description: Contains bias metrics for a model.
                    properties:
                      postTrainingReport:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                      preTrainingReport:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                      report:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                    type: object
                  explainability:
                    description: Contains explainability metrics for a model.
                    properties:
                      report:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                    type: object
                  modelDataQuality:
                    description: Data quality constraints and statistics for a model.
                    properties:
                      constraints:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                      statistics:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                    type: object
                  modelQuality:
                    description: Model quality statistics and constraints.
                    properties:
                      constraints:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                      statistics:
                        description: Details about the metrics source.
                        properties:
                          contentDigest:
                            type: string
                          contentType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                    type: object
                type: object
              modelPackageDescription:
                description: A description of the model package.
                type: string
              modelPackageGroupName:
                description: |-
                  The name or Amazon Resource Name (ARN) of the model package group that this
                  model version belongs to.

                  This parameter is required for versioned models, and does not apply to unversioned
                  models.
                type: string
              modelPackageName:
                description: |-
                  The name of the model package. The name must have 1 to 63 characters. Valid
                  characters are a-z, A-Z, 0-9, and - (hyphen).

                  This parameter is required for unversioned models. It is not applicable to
                  versioned models.
                type: string
              samplePayloadURL:
                description: |-
                  The Amazon Simple Storage Service (Amazon S3) path where the sample payload
                  is stored. This path must point to a single gzip compressed tar archive (.tar.gz
                  suffix). This archive can hold multiple files that are all equally used in
                  the load test. Each file in the archive must satisfy the size constraints
                  of the InvokeEndpoint (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_runtime_InvokeEndpoint.html#API_runtime_InvokeEndpoint_RequestSyntax)
                  call.
                type: string
              skipModelValidation:
                description: Indicates if you want to skip model validation.
                type: string
              sourceAlgorithmSpecification:
                description: Details about the algorithm that was used to create the
                  model package.
                properties:
                  sourceAlgorithms:
                    items:
                      description: |-
                        Specifies an algorithm that was used to create the model package. The algorithm
                        must be either an algorithm resource in your SageMaker account or an algorithm
                        in Amazon Web Services Marketplace that you are subscribed to.
                      properties:
                        algorithmName:
                          type: string
                        modelDataURL:
                          type: string
                      type: object
                    type: array
                type: object
              tags:
                description: |-
                  A list of key value pairs associated with the model. For more information,
                  see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
                  in the Amazon Web Services General Reference Guide.

                  If you supply ModelPackageGroupName, your model package belongs to the model
                  group you specify and uses the tags associated with the model group. In this
                  case, you cannot supply a tag argument.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              task:
                description: |-
                  The machine learning task your model package accomplishes. Common machine
                  learning tasks include object detection and image classification. The following
                  tasks are supported by Inference Recommender: "IMAGE_CLASSIFICATION" | "OBJECT_DETECTION"
                  | "TEXT_GENERATION" |"IMAGE_SEGMENTATION" | "FILL_MASK" | "CLASSIFICATION"
                  | "REGRESSION" | "OTHER".

                  Specify "OTHER" if none of the tasks listed fit your use case.
                type: string
              validationSpecification:
                description: |-
                  Specifies configurations for one or more transform jobs that SageMaker runs
                  to test the model package.
                properties:
                  validationProfiles:
                    items:
                      description: |-
                        Contains data, such as the inputs and targeted instance types that are used
                        in the process of validating the model package.

                        The data provided in the validation profile is made available to your buyers
                        on Amazon Web Services Marketplace.
                      properties:
                        profileName:
                          type: string
                        transformJobDefinition:
                          description: |-
                            Defines the input needed to run a transform job using the inference specification
                            specified in the algorithm.
                          properties:
                            batchStrategy:
                              type: string
                            environment:
                              additionalProperties:
                                type: string
                              type: object
                            maxConcurrentTransforms:
                              format: int64
                              type: integer
                            maxPayloadInMB:
                              format: int64
                              type: integer
                            transformInput:
                              description: |-
                                Describes the input source of a transform job and the way the transform job
                                consumes it.
                              properties:
                                compressionType:
                                  type: string
                                contentType:
                                  type: string
                                dataSource:
                                  description: Describes the location of the channel
                                    data.
                                  properties:
                                    s3DataSource:
                                      description: Describes the S3 data source.
                                      properties:
                                        s3DataType:
                                          type: string
                                        s3URI:
                                          type: string
                                      type: object
                                  type: object
                                splitType:
                                  type: string
                              type: object
                            transformOutput:
                              description: Describes the results of a transform job.
                              properties:
                                accept:
                                  type: string
                                assembleWith:
                                  type: string
                                kmsKeyID:
                                  type: string
                                s3OutputPath:
                                  type: string
                              type: object
                            transformResources:
                              description: |-
                                Describes the resources, including ML instance types and ML instance count,
                                to use for transform job.
                              properties:
                                instanceCount:
                                  format: int64
                                  type: integer
                                instanceType:
                                  type: string
                                volumeKMSKeyID:
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  validationRole:
                    type: string
                type: object
            type: object
          status:
            description: ModelPackageStatus defines the observed state of ModelPackage
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: A timestamp specifying when the model package was created.
                format: date-time
                type: string
              lastModifiedTime:
                description: The last time that the model package was modified.
                format: date-time
                type: string
              modelPackageStatus:
                description: The current status of the model package.
                type: string
              modelPackageStatusDetails:
                description: Details about the current status of the model package.
                properties:
                  imageScanStatuses:
                    items:
                      description: Represents the overall status of a model package.
                      properties:
                        failureReason:
                          type: string
                        name:
                          type: string
                        status:
                          type: string
                      type: object
                    type: array
                  validationStatuses:
                    items:
                      description: Represents the overall status of a model package.
                      properties:
                        failureReason:
                          type: string
                        name:
                          type: string
                        status:
                          type: string
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: modelqualityjobdefinitions.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: ModelQualityJobDefinition
    listKind: ModelQualityJobDefinitionList
    plural: modelqualityjobdefinitions
    singular: modelqualityjobdefinition
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ModelQualityJobDefinition is the Schema for the ModelQualityJobDefinitions
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ModelQualityJobDefinitionSpec defines the desired state of
              ModelQualityJobDefinition.
            properties:
              jobDefinitionName:
                description: The name of the monitoring job definition.
                type: string
              jobResources:
                description: Identifies the resources to deploy for a monitoring job.
                properties:
                  clusterConfig:
                    description: Configuration for the cluster used to run model monitoring
                      jobs.
                    properties:
                      instanceCount:
                        format: int64
                        type: integer
                      instanceType:
                        type: string
                      volumeKMSKeyID:
                        type: string
                      volumeSizeInGB:
                        format: int64
                        type: integer
                    type: object
                type: object
              modelQualityAppSpecification:
                description: The container that runs the monitoring job.
                properties:
                  containerArguments:
                    items:
                      type: string
                    type: array
                  containerEntrypoint:
                    items:
                      type: string
                    type: array
                  environment:
                    additionalProperties:
                      type: string
                    type: object
                  imageURI:
                    type: string
                  postAnalyticsProcessorSourceURI:
                    type: string
                  problemType:
                    type: string
                  recordPreprocessorSourceURI:
                    type: string
                type: object
              modelQualityBaselineConfig:
                description: Specifies the constraints and baselines for the monitoring
                  job.
                properties:
                  baseliningJobName:
                    type: string
                  constraintsResource:
                    description: The constraints resource for a monitoring job.
                    properties:
                      s3URI:
                        type: string
                    type: object
                type: object
              modelQualityJobInput:
                description: A list of the inputs that are monitored. Currently endpoints
                  are supported.
                properties:
                  endpointInput:
                    description: Input object for the endpoint
                    properties:
                      endTimeOffset:
                        type: string
                      endpointName:
                        type: string
                      excludeFeaturesAttribute:
                        type: string
                      featuresAttribute:
                        type: string
                      inferenceAttribute:
                        type: string
                      localPath:
                        type: string
                      probabilityAttribute:
                        type: string
                      probabilityThresholdAttribute:
                        type: number
                      s3DataDistributionType:
                        type: string
                      s3InputMode:
                        type: string
                      startTimeOffset:
                        type: string
                    type: object
                  groundTruthS3Input:
                    description: The ground truth labels for the dataset used for
                      the monitoring job.
                    properties:
                      s3URI:
                        type: string
                    type: object
                type: object
              modelQualityJobOutputConfig:
                description: The output configuration for monitoring jobs.
                properties:
                  kmsKeyID:
                    type: string
                  monitoringOutputs:
                    items:
                      description: The output object for a monitoring job.
                      properties:
                        s3Output:
                          description: |-
                            Information about where and how you want to store the results of a monitoring
                            job.
                          properties:
                            localPath:
                              type: string
                            s3URI:
                              type: string
                            s3UploadMode:
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
              networkConfig:
                description: Specifies the network configuration for the monitoring
                  job.
                properties:
                  enableInterContainerTrafficEncryption:
                    type: boolean
                  enableNetworkIsolation:
                    type: boolean
                  vpcConfig:
                    description: |-
                      Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                      hosted models, and compute resources have access to. You can control access
                      to and from your resources by configuring a VPC. For more information, see
                      Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                    properties:
                      securityGroupIDs:
                        items:
                          type: string
                        type: array
                      subnets:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              roleARN:
                description: |-
                  The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume
                  to perform tasks on your behalf.
                type: string
              stoppingCondition:
                description: A time limit for how long the monitoring job is allowed
                  to run before stopping.
                properties:
                  maxRuntimeInSeconds:
                    format: int64
                    type: integer
                type: object
              tags:
                description: |-
                  (Optional) An array of key-value pairs. For more information, see Using Cost
                  Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL)
                  in the Amazon Web Services Billing and Cost Management User Guide.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - jobDefinitionName
            - jobResources
            - modelQualityAppSpecification
            - modelQualityJobInput
            - modelQualityJobOutputConfig
            - roleARN
            type: object
          status:
            description: ModelQualityJobDefinitionStatus defines the observed state
              of ModelQualityJobDefinition
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: models.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: Model
    listKind: ModelList
    plural: models
    singular: model
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Model is the Schema for the Models API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ModelSpec defines the desired state of Model.

              The properties of a model as returned by the Search (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Search.html)
              API.
            properties:
              containers:
                description: Specifies the containers in the inference pipeline.
                items:
                  description: Describes the container, as part of model definition.
                  properties:
                    containerHostname:
                      type: string
                    environment:
                      additionalProperties:
                        type: string
                      type: object
                    image:
                      type: string
                    imageConfig:
                      description: |-
                        Specifies whether the model container is in Amazon ECR or a private Docker
                        registry accessible from your Amazon Virtual Private Cloud (VPC).
                      properties:
                        repositoryAccessMode:
                          type: string
                        repositoryAuthConfig:
                          description: |-
                            Specifies an authentication configuration for the private docker registry
                            where your model image is hosted. Specify a value for this property only
                            if you specified Vpc as the value for the RepositoryAccessMode field of the
                            ImageConfig object that you passed to a call to CreateModel and the private
                            Docker registry where the model image is hosted requires authentication.
                          properties:
                            repositoryCredentialsProviderARN:
                              type: string
                          type: object
                      type: object
                    inferenceSpecificationName:
                      type: string
                    mode:
                      type: string
                    modelDataSource:
                      description: |-
                        Specifies the location of ML model data to deploy. If specified, you must
                        specify one and only one of the available data sources.
                      properties:
                        s3DataSource:
                          description: Specifies the S3 location of ML model data
                            to deploy.
                          properties:
                            compressionType:
                              type: string
                            modelAccessConfig:
                              description: |-
                                The access configuration file to control access to the ML model. You can
                                explicitly accept the model end-user license agreement (EULA) within the
                                ModelAccessConfig.

                                   * If you are a Jumpstart user, see the End-user license agreements (https://docs.aws.amazon.com/sagemaker/latest/dg/jumpstart-foundation-models-choose.html#jumpstart-foundation-models-choose-eula)
                                   section for more details on accepting the EULA.

                                   * If you are an AutoML user, see the Optional Parameters section of Create
                                   an AutoML job to fine-tune text generation models using the API for details
                                   on How to set the EULA acceptance when fine-tuning a model using the AutoML
                                   API (https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-create-experiment-finetune-llms.html#autopilot-llms-finetuning-api-optional-params).
                              properties:
                                acceptEula:
                                  type: boolean
                              type: object
                            s3DataType:
                              type: string
                            s3URI:
                              type: string
                          type: object
                      type: object
                    modelDataURL:
                      type: string
                    modelPackageName:
                      type: string
                    multiModelConfig:
                      description: Specifies additional configuration for hosting
                        multi-model endpoints.
                      properties:
                        modelCacheSetting:
                          type: string
                      type: object
                  type: object
                type: array
              enableNetworkIsolation:
                description: |-
                  Isolates the model container. No inbound or outbound network calls can be
                  made to or from the model container.
                type: boolean
              executionRoleARN:
                description: |-
                  The Amazon Resource Name (ARN) of the IAM role that SageMaker can assume
                  to access model artifacts and docker image for deployment on ML compute instances
                  or for batch transform jobs. Deploying on ML compute instances is part of
                  model hosting. For more information, see SageMaker Roles (https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html).

                  To be able to pass this role to SageMaker, the caller of this API must have
                  the iam:PassRole permission.
                type: string
              inferenceExecutionConfig:
                description: Specifies details of how containers in a multi-container
                  endpoint are called.
                properties:
                  mode:
                    type: string
                type: object
              modelName:
                description: The name of the new model.
                type: string
              primaryContainer:
                description: |-
                  The location of the primary docker image containing inference code, associated
                  artifacts, and custom environment map that the inference code uses when the
                  model is deployed for predictions.
                properties:
                  containerHostname:
                    type: string
                  environment:
                    additionalProperties:
                      type: string
                    type: object
                  image:
                    type: string
                  imageConfig:
                    description: |-
                      Specifies whether the model container is in Amazon ECR or a private Docker
                      registry accessible from your Amazon Virtual Private Cloud (VPC).
                    properties:
                      repositoryAccessMode:
                        type: string
                      repositoryAuthConfig:
                        description: |-
                          Specifies an authentication configuration for the private docker registry
                          where your model image is hosted. Specify a value for this property only
                          if you specified Vpc as the value for the RepositoryAccessMode field of the
                          ImageConfig object that you passed to a call to CreateModel and the private
                          Docker registry where the model image is hosted requires authentication.
                        properties:
                          repositoryCredentialsProviderARN:
                            type: string
                        type: object
                    type: object
                  inferenceSpecificationName:
                    type: string
                  mode:
                    type: string
                  modelDataSource:
                    description: |-
                      Specifies the location of ML model data to deploy. If specified, you must
                      specify one and only one of the available data sources.
                    properties:
                      s3DataSource:
                        description: Specifies the S3 location of ML model data to
                          deploy.
                        properties:
                          compressionType:
                            type: string
                          modelAccessConfig:
                            description: |-
                              The access configuration file to control access to the ML model. You can
                              explicitly accept the model end-user license agreement (EULA) within the
                              ModelAccessConfig.

                                 * If you are a Jumpstart user, see the End-user license agreements (https://docs.aws.amazon.com/sagemaker/latest/dg/jumpstart-foundation-models-choose.html#jumpstart-foundation-models-choose-eula)
                                 section for more details on accepting the EULA.

                                 * If you are an AutoML user, see the Optional Parameters section of Create
                                 an AutoML job to fine-tune text generation models using the API for details
                                 on How to set the EULA acceptance when fine-tuning a model using the AutoML
                                 API (https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-create-experiment-finetune-llms.html#autopilot-llms-finetuning-api-optional-params).
                            properties:
                              acceptEula:
                                type: boolean
                            type: object
                          s3DataType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                    type: object
                  modelDataURL:
                    type: string
                  modelPackageName:
                    type: string
                  multiModelConfig:
                    description: Specifies additional configuration for hosting multi-model
                      endpoints.
                    properties:
                      modelCacheSetting:
                        type: string
                    type: object
                type: object
              tags:
                description: |-
                  An array of key-value pairs. You can use tags to categorize your Amazon Web
                  Services resources in different ways, for example, by purpose, owner, or
                  environment. For more information, see Tagging Amazon Web Services Resources
                  (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              vpcConfig:
                description: |-
                  A VpcConfig (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_VpcConfig.html)
                  object that specifies the VPC that you want your model to connect to. Control
                  access to and from your model container by configuring the VPC. VpcConfig
                  is used in hosting services and in batch transform. For more information,
                  see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html)
                  and Protect Data in Batch Transform Jobs by Using an Amazon Virtual Private
                  Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/batch-vpc.html).
                properties:
                  securityGroupIDs:
                    items:
                      type: string
                    type: array
                  subnets:
                    items:
                      type: string
                    type: array
                type: object
            required:
            - modelName
            type: object
          status:
            description: ModelStatus defines the observed state of Model
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: monitoringschedules.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: MonitoringSchedule
    listKind: MonitoringScheduleList
    plural: monitoringschedules
    singular: monitoringschedule
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.monitoringScheduleStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MonitoringSchedule is the Schema for the MonitoringSchedules
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              MonitoringScheduleSpec defines the desired state of MonitoringSchedule.

              A schedule for a model monitoring job. For information about model monitor,
              see Amazon SageMaker Model Monitor (https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor.html).
            properties:
              monitoringScheduleConfig:
                description: |-
                  The configuration object that specifies the monitoring schedule and defines
                  the monitoring job.
                properties:
                  monitoringJobDefinition:
                    description: Defines the monitoring job.
                    properties:
                      baselineConfig:
                        description: |-
                          Configuration for monitoring constraints and monitoring statistics. These
                          baseline resources are compared against the results of the current job from
                          the series of jobs scheduled to collect data periodically.
                        properties:
                          baseliningJobName:
                            type: string
                          constraintsResource:
                            description: The constraints resource for a monitoring
                              job.
                            properties:
                              s3URI:
                                type: string
                            type: object
                          statisticsResource:
                            description: The statistics resource for a monitoring
                              job.
                            properties:
                              s3URI:
                                type: string
                            type: object
                        type: object
                      environment:
                        additionalProperties:
                          type: string
                        type: object
                      monitoringAppSpecification:
                        description: Container image configuration object for the
                          monitoring job.
                        properties:
                          containerArguments:
                            items:
                              type: string
                            type: array
                          containerEntrypoint:
                            items:
                              type: string
                            type: array
                          imageURI:
                            type: string
                          postAnalyticsProcessorSourceURI:
                            type: string
                          recordPreprocessorSourceURI:
                            type: string
                        type: object
                      monitoringInputs:
                        items:
                          description: The inputs for a monitoring job.
                          properties:
                            endpointInput:
                              description: Input object for the endpoint
                              properties:
                                endTimeOffset:
                                  type: string
                                endpointName:
                                  type: string
                                excludeFeaturesAttribute:
                                  type: string
                                featuresAttribute:
                                  type: string
                                inferenceAttribute:
                                  type: string
                                localPath:
                                  type: string
                                probabilityAttribute:
                                  type: string
                                probabilityThresholdAttribute:
                                  type: number
                                s3DataDistributionType:
                                  type: string
                                s3InputMode:
                                  type: string
                                startTimeOffset:
                                  type: string
                              type: object
                          type: object
                        type: array
                      monitoringOutputConfig:
                        description: The output configuration for monitoring jobs.
                        properties:
                          kmsKeyID:
                            type: string
                          monitoringOutputs:
                            items:
                              description: The output object for a monitoring job.
                              properties:
                                s3Output:
                                  description: |-
                                    Information about where and how you want to store the results of a monitoring
                                    job.
                                  properties:
                                    localPath:
                                      type: string
                                    s3URI:
                                      type: string
                                    s3UploadMode:
                                      type: string
                                  type: object
                              type: object
                            type: array
                        type: object
                      monitoringResources:
                        description: Identifies the resources to deploy for a monitoring
                          job.
                        properties:
                          clusterConfig:
                            description: Configuration for the cluster used to run
                              model monitoring jobs.
                            properties:
                              instanceCount:
                                format: int64
                                type: integer
                              instanceType:
                                type: string
                              volumeKMSKeyID:
                                type: string
                              volumeSizeInGB:
                                format: int64
                                type: integer
                            type: object
                        type: object
                      networkConfig:
                        description: |-
                          Networking options for a job, such as network traffic encryption between
                          containers, whether to allow inbound and outbound network calls to and from
                          containers, and the VPC subnets and security groups to use for VPC-enabled
                          jobs.
                        properties:
                          enableInterContainerTrafficEncryption:
                            type: boolean
                          enableNetworkIsolation:
                            type: boolean
                          vpcConfig:
                            description: |-
                              Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                              hosted models, and compute resources have access to. You can control access
                              to and from your resources by configuring a VPC. For more information, see
                              Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                            properties:
                              securityGroupIDs:
                                items:
                                  type: string
                                type: array
                              subnets:
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      roleARN:
                        type: string
                      stoppingCondition:
                        description: A time limit for how long the monitoring job
                          is allowed to run before stopping.
                        properties:
                          maxRuntimeInSeconds:
                            format: int64
                            type: integer
                        type: object
                    type: object
                  monitoringJobDefinitionName:
                    type: string
                  monitoringType:
                    type: string
                  scheduleConfig:
                    description: Configuration details about the monitoring schedule.
                    properties:
                      dataAnalysisEndTime:
                        type: string
                      dataAnalysisStartTime:
                        type: string
                      scheduleExpression:
                        type: string
                    type: object
                type: object
              monitoringScheduleName:
                description: |-
                  The name of the monitoring schedule. The name must be unique within an Amazon
                  Web Services Region within an Amazon Web Services account.
                type: string
              tags:
                description: |-
                  (Optional) An array of key-value pairs. For more information, see Using Cost
                  Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL)
                  in the Amazon Web Services Billing and Cost Management User Guide.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - monitoringScheduleConfig
            - monitoringScheduleName
            type: object
          status:
            description: MonitoringScheduleStatus defines the observed state of MonitoringSchedule
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: The time at which the monitoring job was created.
                format: date-time
                type: string
              failureReason:
                description: |-
                  A string, up to one KB in size, that contains the reason a monitoring job
                  failed, if it failed.
                type: string
              lastModifiedTime:
                description: The time at which the monitoring job was last modified.
                format: date-time
                type: string
              lastMonitoringExecutionSummary:
                description: Describes metadata on the last execution to run, if there
                  was one.
                properties:
                  creationTime:
                    format: date-time
                    type: string
                  endpointName:
                    type: string
                  failureReason:
                    type: string
                  lastModifiedTime:
                    format: date-time
                    type: string
                  monitoringExecutionStatus:
                    type: string
                  monitoringJobDefinitionName:
                    type: string
                  monitoringScheduleName:
                    type: string
                  monitoringType:
                    type: string
                  processingJobARN:
                    type: string
                  scheduledTime:
                    format: date-time
                    type: string
                type: object
              monitoringScheduleStatus:
                description: The status of an monitoring job.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: notebookinstancelifecycleconfigs.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: NotebookInstanceLifecycleConfig
    listKind: NotebookInstanceLifecycleConfigList
    plural: notebookinstancelifecycleconfigs
    singular: notebookinstancelifecycleconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.creationTime
      name: CREATION-TIME
      type: date
    - jsonPath: .status.lastModifiedTime
      name: LAST-MODIFIED-TIME
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NotebookInstanceLifecycleConfig is the Schema for the NotebookInstanceLifecycleConfigs
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NotebookInstanceLifecycleConfigSpec defines the desired state
              of NotebookInstanceLifecycleConfig.
            properties:
              notebookInstanceLifecycleConfigName:
                description: The name of the lifecycle configuration.
                type: string
              onCreate:
                description: |-
                  A shell script that runs only once, when you create a notebook instance.
                  The shell script must be a base64-encoded string.
                items:
                  description: |-
                    Contains the notebook instance lifecycle configuration script.

                    Each lifecycle configuration script has a limit of 16384 characters.

                    The value of the $PATH environment variable that is available to both scripts
                    is /sbin:bin:/usr/sbin:/usr/bin.

                    View Amazon CloudWatch Logs for notebook instance lifecycle configurations
                    in log group /aws/sagemaker/NotebookInstances in log stream [notebook-instance-name]/[LifecycleConfigHook].

                    Lifecycle configuration scripts cannot run for longer than 5 minutes. If
                    a script runs for longer than 5 minutes, it fails and the notebook instance
                    is not created or started.

                    For information about notebook instance lifestyle configurations, see Step
                    2.1: (Optional) Customize a Notebook Instance (https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html).
                  properties:
                    content:
                      type: string
                  type: object
                type: array
              onStart:
                description: |-
                  A shell script that runs every time you start a notebook instance, including
                  when you create the notebook instance. The shell script must be a base64-encoded
                  string.
                items:
                  description: |-
                    Contains the notebook instance lifecycle configuration script.

                    Each lifecycle configuration script has a limit of 16384 characters.

                    The value of the $PATH environment variable that is available to both scripts
                    is /sbin:bin:/usr/sbin:/usr/bin.

                    View Amazon CloudWatch Logs for notebook instance lifecycle configurations
                    in log group /aws/sagemaker/NotebookInstances in log stream [notebook-instance-name]/[LifecycleConfigHook].

                    Lifecycle configuration scripts cannot run for longer than 5 minutes. If
                    a script runs for longer than 5 minutes, it fails and the notebook instance
                    is not created or started.

                    For information about notebook instance lifestyle configurations, see Step
                    2.1: (Optional) Customize a Notebook Instance (https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html).
                  properties:
                    content:
                      type: string
                  type: object
                type: array
            required:
            - notebookInstanceLifecycleConfigName
            type: object
          status:
            description: NotebookInstanceLifecycleConfigStatus defines the observed
              state of NotebookInstanceLifecycleConfig
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: A timestamp that tells when the lifecycle configuration
                  was created.
                format: date-time
                type: string
              lastModifiedTime:
                description: A timestamp that tells when the lifecycle configuration
                  was last modified.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: notebookinstances.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: NotebookInstance
    listKind: NotebookInstanceList
    plural: notebookinstances
    singular: notebookinstance
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.notebookInstanceStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NotebookInstance is the Schema for the NotebookInstances API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NotebookInstanceSpec defines the desired state of NotebookInstance.
            properties:
              acceleratorTypes:
                description: |-
                  This parameter is no longer supported. Elastic Inference (EI) is no longer
                  available.

                  This parameter was used to specify a list of EI instance types to associate
                  with this notebook instance.
                items:
                  type: string
                type: array
              additionalCodeRepositories:
                description: |-
                  An array of up to three Git repositories to associate with the notebook instance.
                  These can be either the names of Git repositories stored as resources in
                  your account, or the URL of Git repositories in Amazon Web Services CodeCommit
                  (https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or
                  in any other Git repository. These repositories are cloned at the same level
                  as the default repository of your notebook instance. For more information,
                  see Associating Git Repositories with SageMaker Notebook Instances (https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html).
                items:
                  type: string
                type: array
              defaultCodeRepository:
                description: |-
                  A Git repository to associate with the notebook instance as its default code
                  repository. This can be either the name of a Git repository stored as a resource
                  in your account, or the URL of a Git repository in Amazon Web Services CodeCommit
                  (https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or
                  in any other Git repository. When you open a notebook instance, it opens
                  in the directory that contains this repository. For more information, see
                  Associating Git Repositories with SageMaker Notebook Instances (https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html).
                type: string
              directInternetAccess:
                description: |-
                  Sets whether SageMaker provides internet access to the notebook instance.
                  If you set this to Disabled this notebook instance is able to access resources
                  only in your VPC, and is not be able to connect to SageMaker training and
                  endpoint services unless you configure a NAT Gateway in your VPC.

                  For more information, see Notebook Instances Are Internet-Enabled by Default
                  (https://docs.aws.amazon.com/sagemaker/latest/dg/appendix-additional-considerations.html#appendix-notebook-and-internet-access).
                  You can set the value of this parameter to Disabled only if you set a value
                  for the SubnetId parameter.
                type: string
              instanceType:
                description: The type of ML compute instance to launch for the notebook
                  instance.
                type: string
              kmsKeyID:
                description: |-
                  The Amazon Resource Name (ARN) of a Amazon Web Services Key Management Service
                  key that SageMaker uses to encrypt data on the storage volume attached to
                  your notebook instance. The KMS key you provide must be enabled. For information,
                  see Enabling and Disabling Keys (https://docs.aws.amazon.com/kms/latest/developerguide/enabling-keys.html)
                  in the Amazon Web Services Key Management Service Developer Guide.
                type: string
              lifecycleConfigName:
                description: |-
                  The name of a lifecycle configuration to associate with the notebook instance.
                  For information about lifestyle configurations, see Step 2.1: (Optional)
                  Customize a Notebook Instance (https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html).
                type: string
              notebookInstanceName:
                description: The name of the new notebook instance.
                type: string
              platformIdentifier:
                description: The platform identifier of the notebook instance runtime
                  environment.
                type: string
              roleARN:
                description: |-
                  When you send any requests to Amazon Web Services resources from the notebook
                  instance, SageMaker assumes this role to perform tasks on your behalf. You
                  must grant this role necessary permissions so SageMaker can perform these
                  tasks. The policy must allow the SageMaker service principal (sagemaker.amazonaws.com)
                  permissions to assume this role. For more information, see SageMaker Roles
                  (https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html).

                  To be able to pass this role to SageMaker, the caller of this API must have
                  the iam:PassRole permission.
                type: string
              rootAccess:
                description: |-
                  Whether root access is enabled or disabled for users of the notebook instance.
                  The default value is Enabled.

                  Lifecycle configurations need root access to be able to set up a notebook
                  instance. Because of this, lifecycle configurations associated with a notebook
                  instance always run with root access even if you disable root access for
                  users.
                type: string
              securityGroupIDs:
                description: |-
                  The VPC security group IDs, in the form sg-xxxxxxxx. The security groups
                  must be for the same VPC as specified in the subnet.
                items:
                  type: string
                type: array
              subnetID:
                description: |-
                  The ID of the subnet in a VPC to which you would like to have a connectivity
                  from your ML compute instance.
                type: string
              tags:
                description: |-
                  An array of key-value pairs. You can use tags to categorize your Amazon Web
                  Services resources in different ways, for example, by purpose, owner, or
                  environment. For more information, see Tagging Amazon Web Services Resources
                  (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              volumeSizeInGB:
                description: |-
                  The size, in GB, of the ML storage volume to attach to the notebook instance.
                  The default value is 5 GB.
                format: int64
                type: integer
            required:
            - instanceType
            - notebookInstanceName
            - roleARN
            type: object
          status:
            description: NotebookInstanceStatus defines the observed state of NotebookInstance
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureReason:
                description: If status is Failed, the reason it failed.
                type: string
              notebookInstanceStatus:
                description: The status of the notebook instance.
                type: string
              stoppedByControllerMetadata:
                description: |-
                  The URL that you use to connect to the Jupyter notebook that is running in
                  your notebook instance.
                type: string
              url:
                description: |-
                  The URL that you use to connect to the Jupyter notebook that is running in
                  your notebook instance.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: pipelineexecutions.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: PipelineExecution
    listKind: PipelineExecutionList
    plural: pipelineexecutions
    singular: pipelineexecution
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.pipelineExecutionStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PipelineExecution is the Schema for the PipelineExecutions API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              PipelineExecutionSpec defines the desired state of PipelineExecution.

              An execution of a pipeline.
            properties:
              parallelismConfiguration:
                description: |-
                  This configuration, if specified, overrides the parallelism configuration
                  of the parent pipeline for this specific run.
                properties:
                  maxParallelExecutionSteps:
                    format: int64
                    type: integer
                type: object
              pipelineExecutionDescription:
                description: The description of the pipeline execution.
                type: string
              pipelineExecutionDisplayName:
                description: The display name of the pipeline execution.
                type: string
              pipelineName:
                description: The name or Amazon Resource Name (ARN) of the pipeline.
                type: string
              pipelineParameters:
                description: Contains a list of pipeline parameters. This list can
                  be empty.
                items:
                  description: Assigns a value to a named Pipeline parameter.
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              selectiveExecutionConfig:
                description: The selective execution configuration applied to the
                  pipeline run.
                properties:
                  selectedSteps:
                    items:
                      description: A step selected to run in selective execution mode.
                      properties:
                        stepName:
                          type: string
                      type: object
                    type: array
                  sourcePipelineExecutionARN:
                    type: string
                type: object
            required:
            - pipelineName
            type: object
          status:
            description: PipelineExecutionStatus defines the observed state of PipelineExecution
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: The time when the pipeline execution was created.
                format: date-time
                type: string
              failureReason:
                description: If the execution failed, a message describing why.
                type: string
              lastModifiedTime:
                description: The time when the pipeline execution was modified last.
                format: date-time
                type: string
              pipelineExecutionStatus:
                description: The status of the pipeline execution.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: pipelines.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    singular: pipeline
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.pipelineStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Pipeline is the Schema for the Pipelines API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              PipelineSpec defines the desired state of Pipeline.

              A SageMaker Model Building Pipeline instance.
            properties:
              parallelismConfiguration:
                description: |-
                  This is the configuration that controls the parallelism of the pipeline.
                  If specified, it applies to all runs of this pipeline by default.
                properties:
                  maxParallelExecutionSteps:
                    format: int64
                    type: integer
                type: object
              pipelineDefinition:
                description: |-
                  The JSON pipeline definition (https://aws-sagemaker-mlops.github.io/sagemaker-model-building-pipeline-definition-JSON-schema/)
                  of the pipeline.
                type: string
              pipelineDescription:
                description: A description of the pipeline.
                type: string
              pipelineDisplayName:
                description: The display name of the pipeline.
                type: string
              pipelineName:
                description: The name of the pipeline.
                type: string
              roleARN:
                description: |-
                  The Amazon Resource Name (ARN) of the role used by the pipeline to access
                  and create resources.
                type: string
              tags:
                description: A list of tags to apply to the created pipeline.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - pipelineName
            - roleARN
            type: object
          status:
            description: PipelineStatus defines the observed state of Pipeline
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: The time when the pipeline was created.
                format: date-time
                type: string
              lastModifiedTime:
                description: The time when the pipeline was last modified.
                format: date-time
                type: string
              pipelineStatus:
                description: The status of the pipeline execution.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: processingjobs.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: ProcessingJob
    listKind: ProcessingJobList
    plural: processingjobs
    singular: processingjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.processingJobStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProcessingJob is the Schema for the ProcessingJobs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ProcessingJobSpec defines the desired state of ProcessingJob.

              An Amazon SageMaker processing job that is used to analyze data and evaluate
              models. For more information, see Process Data and Evaluate Models (https://docs.aws.amazon.com/sagemaker/latest/dg/processing-job.html).
            properties:
              appSpecification:
                description: Configures the processing job to run a specified Docker
                  container image.
                properties:
                  containerArguments:
                    items:
                      type: string
                    type: array
                  containerEntrypoint:
                    items:
                      type: string
                    type: array
                  imageURI:
                    type: string
                type: object
              environment:
                additionalProperties:
                  type: string
                description: |-
                  The environment variables to set in the Docker container. Up to 100 key and
                  values entries in the map are supported.
                type: object
              experimentConfig:
                description: |-
                  Associates a SageMaker job as a trial component with an experiment and trial.
                  Specified when you call the following APIs:

                    - CreateProcessingJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateProcessingJob.html)

                    - CreateTrainingJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html)

                    - CreateTransformJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTransformJob.html)
                properties:
                  experimentName:
                    type: string
                  trialComponentDisplayName:
                    type: string
                  trialName:
                    type: string
                type: object
              networkConfig:
                description: |-
                  Networking options for a processing job, such as whether to allow inbound
                  and outbound network calls to and from processing containers, and the VPC
                  subnets and security groups to use for VPC-enabled processing jobs.
                properties:
                  enableInterContainerTrafficEncryption:
                    type: boolean
                  enableNetworkIsolation:
                    type: boolean
                  vpcConfig:
                    description: |-
                      Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs,
                      hosted models, and compute resources have access to. You can control access
                      to and from your resources by configuring a VPC. For more information, see
                      Give SageMaker Access to Resources in your Amazon VPC (https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html).
                    properties:
                      securityGroupIDs:
                        items:
                          type: string
                        type: array
                      subnets:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              processingInputs:
                description: An array of inputs configuring the data to download into
                  the processing container.
                items:
                  description: |-
                    The inputs for a processing job. The processing input must specify exactly
                    one of either S3Input or DatasetDefinition types.
                  properties:
                    appManaged:
                      type: boolean
                    datasetDefinition:
                      description: |-
                        Configuration for Dataset Definition inputs. The Dataset Definition input
                        must specify exactly one of either AthenaDatasetDefinition or RedshiftDatasetDefinition
                        types.
                      properties:
                        athenaDatasetDefinition:
                          description: Configuration for Athena Dataset Definition
                            input.
                          properties:
                            catalog:
                              description: The name of the data catalog used in Athena
                                query execution.
                              type: string
                            database:
                              description: The name of the database used in the Athena
                                query execution.
                              type: string
                            kmsKeyID:
                              type: string
                            outputCompression:
                              description: The compression used for Athena query results.
                              type: string
                            outputFormat:
                              description: The data storage format for Athena query
                                results.
                              type: string
                            outputS3URI:
                              type: string
                            queryString:
                              description: The SQL query statements, to be executed.
                              type: string
                            workGroup:
                              description: The name of the workgroup in which the
                                Athena query is being started.
                              type: string
                          type: object
                        dataDistributionType:
                          type: string
                        inputMode:
                          type: string
                        localPath:
                          type: string
                        redshiftDatasetDefinition:
                          description: Configuration for Redshift Dataset Definition
                            input.
                          properties:
                            clusterID:
                              description: The Redshift cluster Identifier.
                              type: string
                            clusterRoleARN:
                              type: string
                            database:
                              description: The name of the Redshift database used
                                in Redshift query execution.
                              type: string
                            dbUser:
                              description: The database user name used in Redshift
                                query execution.
                              type: string
                            kmsKeyID:
                              type: string
                            outputCompression:
                              description: The compression used for Redshift query
                                results.
                              type: string
                            outputFormat:
                              description: The data storage format for Redshift query
                                results.
                              type: string
                            outputS3URI:
                              type: string
                            queryString:
                              description: The SQL query statements to be executed.
                              type: string
                          type: object
                      type: object
                    inputName:
                      type: string
                    s3Input:
                      description: |-
                        Configuration for downloading input data from Amazon S3 into the processing
                        container.
                      properties:
                        localPath:
                          type: string
                        s3CompressionType:
                          type: string
                        s3DataDistributionType:
                          type: string
                        s3DataType:
                          type: string
                        s3InputMode:
                          type: string
                        s3URI:
                          type: string
                      type: object
                  type: object
                type: array
              processingJobName:
                description: |-
                  The name of the processing job. The name must be unique within an Amazon
                  Web Services Region in the Amazon Web Services account.
                type: string
              processingOutputConfig:
                description: Output configuration for the processing job.
                properties:
                  kmsKeyID:
                    type: string
                  outputs:
                    items:
                      description: |-
                        Describes the results of a processing job. The processing output must specify
                        exactly one of either S3Output or FeatureStoreOutput types.
                      properties:
                        appManaged:
                          type: boolean
                        featureStoreOutput:
                          description: Configuration for processing job outputs in
                            Amazon SageMaker Feature Store.
                          properties:
                            featureGroupName:
                              type: string
                          type: object
                        outputName:
                          type: string
                        s3Output:
                          description: |-
                            Configuration for uploading output data to Amazon S3 from the processing
                            container.
                          properties:
                            localPath:
                              type: string
                            s3URI:
                              type: string
                            s3UploadMode:
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
              processingResources:
                description: |-
                  Identifies the resources, ML compute instances, and ML storage volumes to
                  deploy for a processing job. In distributed training, you specify more than
                  one instance.
                properties:
                  clusterConfig:
                    description: Configuration for the cluster used to run a processing
                      job.
                    properties:
                      instanceCount:
                        format: int64
                        type: integer
                      instanceType:
                        type: string
                      volumeKMSKeyID:
                        type: string
                      volumeSizeInGB:
                        format: int64
                        type: integer
                    type: object
                type: object
              roleARN:
                description: |-
                  The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume
                  to perform tasks on your behalf.
                type: string
              stoppingCondition:
                description: The time limit for how long the processing job is allowed
                  to run.
                properties:
                  maxRuntimeInSeconds:
                    format: int64
                    type: integer
                type: object
              tags:
                description: |-
                  (Optional) An array of key-value pairs. For more information, see Using Cost
                  Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL)
                  in the Amazon Web Services Billing and Cost Management User Guide.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - appSpecification
            - processingJobName
            - processingResources
            - roleARN
            type: object
          status:
            description: ProcessingJobStatus defines the observed state of ProcessingJob
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureReason:
                description: |-
                  A string, up to one KB in size, that contains the reason a processing job
                  failed, if it failed.
                type: string
              processingJobStatus:
                description: Provides the status of a processing job.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: trainingjobs.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: TrainingJob
    listKind: TrainingJobList
    plural: trainingjobs
    singular: trainingjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.secondaryStatus
      name: SECONDARY-STATUS
      type: string
    - jsonPath: .status.trainingJobStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TrainingJob is the Schema for the TrainingJobs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              TrainingJobSpec defines the desired state of TrainingJob.

              Contains information about a training job.
            properties:
              algorithmSpecification:
                description: |-
                  The registry path of the Docker image that contains the training algorithm
                  and algorithm-specific metadata, including the input mode. For more information
                  about algorithms provided by SageMaker, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).
                  For information about providing your own algorithms, see Using Your Own Algorithms
                  with Amazon SageMaker (https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html).
                properties:
                  algorithmName:
                    type: string
                  enableSageMakerMetricsTimeSeries:
                    type: boolean
                  metricDefinitions:
                    items:
                      description: |-
                        Specifies a metric that the training algorithm writes to stderr or stdout.
                        You can view these logs to understand how your training job performs and
                        check for any errors encountered during training. SageMaker hyperparameter
                        tuning captures all defined metrics. Specify one of the defined metrics to
                        use as an objective metric using the TuningObjective (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html#sagemaker-Type-HyperParameterTrainingJobDefinition-TuningObjective)
                        parameter in the HyperParameterTrainingJobDefinition API to evaluate job
                        performance during hyperparameter tuning.
                      properties:
                        name:
                          type: string
                        regex:
                          type: string
                      type: object
                    type: array
                  trainingImage:
                    type: string
                  trainingInputMode:
                    description: |-
                      The training input mode that the algorithm supports. For more information
                      about input modes, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).

                      Pipe mode

                      If an algorithm supports Pipe mode, Amazon SageMaker streams data directly
                      from Amazon S3 to the container.

                      File mode

                      If an algorithm supports File mode, SageMaker downloads the training data
                      from S3 to the provisioned ML storage volume, and mounts the directory to
                      the Docker volume for the training container.

                      You must provision the ML storage volume with sufficient capacity to accommodate
                      the data downloaded from S3. In addition to the training data, the ML storage
                      volume also stores the output model. The algorithm container uses the ML
                      storage volume to also store intermediate information, if any.

                      For distributed algorithms, training data is distributed uniformly. Your
                      training duration is predictable if the input data objects sizes are approximately
                      the same. SageMaker does not split the files any further for model training.
                      If the object sizes are skewed, training won't be optimal as the data distribution
                      is also skewed when one host in a training cluster is overloaded, thus becoming
                      a bottleneck in training.

                      FastFile mode

                      If an algorithm supports FastFile mode, SageMaker streams data directly from
                      S3 to the container with no code changes, and provides file system access
                      to the data. Users can author their training script to interact with these
                      files as if they were stored on disk.

                      FastFile mode works best when the data is read sequentially. Augmented manifest
                      files aren't supported. The startup time is lower when there are fewer files
                      in the S3 bucket provided.
                    type: string
                type: object
              checkpointConfig:
                description: |-
                  Contains information about the output location for managed spot training
                  checkpoint data.
                properties:
                  localPath:
                    type: string
                  s3URI:
                    type: string
                type: object
              debugHookConfig:
                description: |-
                  Configuration information for the Amazon SageMaker Debugger hook parameters,
                  metric and tensor collections, and storage paths. To learn more about how
                  to configure the DebugHookConfig parameter, see Use the SageMaker and Debugger
                  Configuration API Operations to Create, Update, and Debug Your Training Job
                  (https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html).
                properties:
                  collectionConfigurations:
                    items:
                      description: |-
                        Configuration information for the Amazon SageMaker Debugger output tensor
                        collections.
                      properties:
                        collectionName:
                          type: string
                        collectionParameters:
                          additionalProperties:
                            type: string
                          type: object
                      type: object
                    type: array
                  hookParameters:
                    additionalProperties:
                      type: string
                    type: object
                  localPath:
                    type: string
                  s3OutputPath:
                    type: string
                type: object
              debugRuleConfigurations:
                description: |-
                  Configuration information for Amazon SageMaker Debugger rules for debugging
                  output tensors.
                items:
                  description: |-
                    Configuration information for SageMaker Debugger rules for debugging. To
                    learn more about how to configure the DebugRuleConfiguration parameter, see
                    Use the SageMaker and Debugger Configuration API Operations to Create, Update,
                    and Debug Your Training Job (https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html).
                  properties:
                    instanceType:
                      type: string
                    localPath:
                      type: string
                    ruleConfigurationName:
                      type: string
                    ruleEvaluatorImage:
                      type: string
                    ruleParameters:
                      additionalProperties:
                        type: string
                      type: object
                    s3OutputPath:
                      type: string
                    volumeSizeInGB:
                      format: int64
                      type: integer
                  type: object
                type: array
              enableInterContainerTrafficEncryption:
                description: |-
                  To encrypt all communications between ML compute instances in distributed
                  training, choose True. Encryption provides greater security for distributed
                  training, but training might take longer. How long it takes depends on the
                  amount of communication between compute instances, especially if you use
                  a deep learning algorithm in distributed training. For more information,
                  see Protect Communications Between ML Compute Instances in a Distributed
                  Training Job (https://docs.aws.amazon.com/sagemaker/latest/dg/train-encrypt.html).
                type: boolean
              enableManagedSpotTraining:
                description: |-
                  To train models using managed spot training, choose True. Managed spot training
                  provides a fully managed and scalable infrastructure for training machine
                  learning models. this option is useful when training jobs can be interrupted
                  and when there is flexibility when the training job is run.

                  The complete and intermediate results of jobs are stored in an Amazon S3
                  bucket, and can be used as a starting point to train models incrementally.
                  Amazon SageMaker provides metrics and logs in CloudWatch. They can be used
                  to see when managed spot training jobs are running, interrupted, resumed,
                  or completed.
                type: boolean
              enableNetworkIsolation:
                description: |-
                  Isolates the training container. No inbound or outbound network calls can
                  be made, except for calls between peers within a training cluster for distributed
                  training. If you enable network isolation for training jobs that are configured
                  to use a VPC, SageMaker downloads and uploads customer data and model artifacts
                  through the specified VPC, but the training container does not have network
                  access.
                type: boolean
              environment:
                additionalProperties:
                  type: string
                description: The environment variables to set in the Docker container.
                type: object
              experimentConfig:
                description: |-
                  Associates a SageMaker job as a trial component with an experiment and trial.
                  Specified when you call the following APIs:

                    - CreateProcessingJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateProcessingJob.html)

                    - CreateTrainingJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html)

                    - CreateTransformJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTransformJob.html)
                properties:
                  experimentName:
                    type: string
                  trialComponentDisplayName:
                    type: string
                  trialName:
                    type: string
                type: object
              hyperParameters:
                additionalProperties:
                  type: string
                description: |-
                  Algorithm-specific parameters that influence the quality of the model. You
                  set hyperparameters before you start the learning process. For a list of
                  hyperparameters for each training algorithm provided by SageMaker, see Algorithms
                  (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).

                  You can specify a maximum of 100 hyperparameters. Each hyperparameter is
                  a key-value pair. Each key and value is limited to 256 characters, as specified
                  by the Length Constraint.

                  Do not include any security-sensitive information including account access
                  IDs, secrets or tokens in any hyperparameter field. If the use of security-sensitive
                  credentials are detected, SageMaker will reject your training job request
                  and return an exception error.
                type: object
              infraCheckConfig:
                description: |-
                  Contains information about the infrastructure health check configuration
                  for the training job.
                properties:
                  enableInfraCheck:
                    type: boolean
                type: object
              inputDataConfig:
                description: |-
                  An array of Channel objects. Each channel is a named input source. InputDataConfig
                  describes the input data and its location.

                  Algorithms can accept input data from one or more channels. For example,
                  an algorithm might have two channels of input data, training_data and validation_data.
                  The configuration for each channel provides the S3, EFS, or FSx location
                  where the input data is stored. It also provides information about the stored
                  data: the MIME type, compression method, and whether the data is wrapped
                  in RecordIO format.

                  Depending on the input mode that the algorithm supports, SageMaker either
                  copies input data files from an S3 bucket to a local directory in the Docker
                  container, or makes it available as input streams. For example, if you specify
                  an EFS location, input data files are available as input streams. They do
                  not need to be downloaded.

                  Your input must be in the same Amazon Web Services region as your training
                  job.
                items:
                  description: A channel is a named input source that training algorithms
                    can consume.
                  properties:
                    channelName:
                      type: string
                    compressionType:
                      type: string
                    contentType:
                      type: string
                    dataSource:
                      description: Describes the location of the channel data.
                      properties:
                        fileSystemDataSource:
                          description: Specifies a file system data source for a channel.
                          properties:
                            directoryPath:
                              type: string
                            fileSystemAccessMode:
                              type: string
                            fileSystemID:
                              type: string
                            fileSystemType:
                              type: string
                          type: object
                        s3DataSource:
                          description: |-
                            Describes the S3 data source.

                            Your input bucket must be in the same Amazon Web Services region as your
                            training job.
                          properties:
                            attributeNames:
                              items:
                                type: string
                              type: array
                            instanceGroupNames:
                              items:
                                type: string
                              type: array
                            s3DataDistributionType:
                              type: string
                            s3DataType:
                              type: string
                            s3URI:
                              type: string
                          type: object
                      type: object
                    inputMode:
                      description: |-
                        The training input mode that the algorithm supports. For more information
                        about input modes, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html).

                        Pipe mode

                        If an algorithm supports Pipe mode, Amazon SageMaker streams data directly
                        from Amazon S3 to the container.

                        File mode

                        If an algorithm supports File mode, SageMaker downloads the training data
                        from S3 to the provisioned ML storage volume, and mounts the directory to
                        the Docker volume for the training container.

                        You must provision the ML storage volume with sufficient capacity to accommodate
                        the data downloaded from S3. In addition to the training data, the ML storage
                        volume also stores the output model. The algorithm container uses the ML
                        storage volume to also store intermediate information, if any.

                        For distributed algorithms, training data is distributed uniformly. Your
                        training duration is predictable if the input data objects sizes are approximately
                        the same. SageMaker does not split the files any further for model training.
                        If the object sizes are skewed, training won't be optimal as the data distribution
                        is also skewed when one host in a training cluster is overloaded, thus becoming
                        a bottleneck in training.

                        FastFile mode

                        If an algorithm supports FastFile mode, SageMaker streams data directly from
                        S3 to the container with no code changes, and provides file system access
                        to the data. Users can author their training script to interact with these
                        files as if they were stored on disk.

                        FastFile mode works best when the data is read sequentially. Augmented manifest
                        files aren't supported. The startup time is lower when there are fewer files
                        in the S3 bucket provided.
                      type: string
                    recordWrapperType:
                      type: string
                    shuffleConfig:
                      description: |-
                        A configuration for a shuffle option for input data in a channel. If you
                        use S3Prefix for S3DataType, the results of the S3 key prefix matches are
                        shuffled. If you use ManifestFile, the order of the S3 object references
                        in the ManifestFile is shuffled. If you use AugmentedManifestFile, the order
                        of the JSON lines in the AugmentedManifestFile is shuffled. The shuffling
                        order is determined using the Seed value.

                        For Pipe input mode, when ShuffleConfig is specified shuffling is done at
                        the start of every epoch. With large datasets, this ensures that the order
                        of the training data is different for each epoch, and it helps reduce bias
                        and possible overfitting. In a multi-node training job when ShuffleConfig
                        is combined with S3DataDistributionType of ShardedByS3Key, the data is shuffled
                        across nodes so that the content sent to a particular node on the first epoch
                        might be sent to a different node on the second epoch.
                      properties:
                        seed:
                          format: int64
                          type: integer
                      type: object
                  type: object
                type: array
              outputDataConfig:
                description: |-
                  Specifies the path to the S3 location where you want to store model artifacts.
                  SageMaker creates subfolders for the artifacts.
                properties:
                  compressionType:
                    type: string
                  kmsKeyID:
                    type: string
                  s3OutputPath:
                    type: string
                type: object
              profilerConfig:
                description: |-
                  Configuration information for Amazon SageMaker Debugger system monitoring,
                  framework profiling, and storage paths.
                properties:
                  profilingIntervalInMilliseconds:
                    format: int64
                    type: integer
                  profilingParameters:
                    additionalProperties:
                      type: string
                    type: object
                  s3OutputPath:
                    type: string
                type: object
              profilerRuleConfigurations:
                description: |-
                  Configuration information for Amazon SageMaker Debugger rules for profiling
                  system and framework metrics.
                items:
                  description: Configuration information for profiling rules.
                  properties:
                    instanceType:
                      type: string
                    localPath:
                      type: string
                    ruleConfigurationName:
                      type: string
                    ruleEvaluatorImage:
                      type: string
                    ruleParameters:
                      additionalProperties:
                        type: string
                      type: object
                    s3OutputPath:
                      type: string
                    volumeSizeInGB:
                      format: int64
                      type: integer
                  type: object
                type: array
              remoteDebugConfig:
                description: |-
                  Configuration for remote debugging. To learn more about the remote debugging
                  functionality of SageMaker, see Access a training container through Amazon
                  Web Services Systems Manager (SSM) for remote debugging (https://docs.aws.amazon.com/sagemaker/latest/dg/train-remote-debugging.html).
                properties:
                  enableRemoteDebug:
                    type: boolean
                type: object
              resourceConfig:
                description: |-
                  The resources, including the ML compute instances and ML storage volumes,
                  to use for model training.

                  ML storage volumes store model artifacts and incremental states. Training
                  algorithms might also use ML storage volumes for scratch space. If you want
                  SageMaker to use the ML storage volume to store the training data, choose
                  File as the TrainingInputMode in the algorithm specification. For distributed
                  training algorithms, specify an instance count greater than 1.
                properties:
                  instanceCount:
                    format: int64
                    type: integer
                  instanceGroups:
                    items:
                      description: |-
                        Defines an instance group for heterogeneous cluster training. When requesting
                        a training job using the CreateTrainingJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html)
                        API, you can configure multiple instance groups .
                      properties:
                        instanceCount:
                          format: int64
                          type: integer
                        instanceGroupName:
                          type: string
                        instanceType:
                          type: string
                      type: object
                    type: array
                  instanceType:
                    type: string
                  keepAlivePeriodInSeconds:
                    description: |-
                      Optional. Customer requested period in seconds for which the Training cluster
                      is kept alive after the job is finished.
                    format: int64
                    type: integer
                  volumeKMSKeyID:
                    type: string
                  volumeSizeInGB:
                    format: int64
                    type: integer
                type: object
              retryStrategy:
                description: The number of times to retry the job when the job fails
                  due to an InternalServerError.
                properties:
                  maximumRetryAttempts:
                    format: int64
                    type: integer
                type: object
              roleARN:
                description: |-
                  The Amazon Resource Name (ARN) of an IAM role that SageMaker can assume to
                  perform tasks on your behalf.

                  During model training, SageMaker needs your permission to read input data
                  from an S3 bucket, download a Docker image that contains training code, write
                  model artifacts to an S3 bucket, write logs to Amazon CloudWatch Logs, and
                  publish metrics to Amazon CloudWatch. You grant permissions for all of these
                  tasks to an IAM role. For more information, see SageMaker Roles (https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html).

                  To be able to pass this role to SageMaker, the caller of this API must have
                  the iam:PassRole permission.
                type: string
              stoppingCondition:
                description: |-
                  Specifies a limit to how long a model training job can run. It also specifies
                  how long a managed Spot training job has to complete. When the job reaches
                  the time limit, SageMaker ends the training job. Use this API to cap model
                  training costs.

                  To stop a job, SageMaker sends the algorithm the SIGTERM signal, which delays
                  job termination for 120 seconds. Algorithms can use this 120-second window
                  to save the model artifacts, so the results of training are not lost.
                properties:
                  maxPendingTimeInSeconds:
                    description: Maximum job scheduler pending time in seconds.
                    format: int64
                    type: integer
                  maxRuntimeInSeconds:
                    format: int64
                    type: integer
                  maxWaitTimeInSeconds:
                    format: int64
                    type: integer
                type: object
              tags:
                description: |-
                  An array of key-value pairs. You can use tags to categorize your Amazon Web
                  Services resources in different ways, for example, by purpose, owner, or
                  environment. For more information, see Tagging Amazon Web Services Resources
                  (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              tensorBoardOutputConfig:
                description: |-
                  Configuration of storage locations for the Amazon SageMaker Debugger TensorBoard
                  output data.
                properties:
                  localPath:
                    type: string
                  s3OutputPath:
                    type: string
                type: object
              trainingJobName:
                description: |-
                  The name of the training job. The name must be unique within an Amazon Web
                  Services Region in an Amazon Web Services account.
                type: string
              vpcConfig:
                description: |-
                  A VpcConfig (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_VpcConfig.html)
                  object that specifies the VPC that you want your training job to connect
                  to. Control access to and from your training container by configuring the
                  VPC. For more information, see Protect Training Jobs by Using an Amazon Virtual
                  Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html).
                properties:
                  securityGroupIDs:
                    items:
                      type: string
                    type: array
                  subnets:
                    items:
                      type: string
                    type: array
                type: object
            required:
            - algorithmSpecification
            - outputDataConfig
            - resourceConfig
            - roleARN
            - stoppingCondition
            - trainingJobName
            type: object
          status:
            description: TrainingJobStatus defines the observed state of TrainingJob
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: A timestamp that indicates when the training job was
                  created.
                format: date-time
                type: string
              debugRuleEvaluationStatuses:
                description: |-
                  Evaluation status of Amazon SageMaker Debugger rules for debugging on a training
                  job.
                items:
                  description: Information about the status of the rule evaluation.
                  properties:
                    lastModifiedTime:
                      format: date-time
                      type: string
                    ruleConfigurationName:
                      type: string
                    ruleEvaluationJobARN:
                      type: string
                    ruleEvaluationStatus:
                      type: string
                    statusDetails:
                      type: string
                  type: object
                type: array
              failureReason:
                description: If the training job failed, the reason it failed.
                type: string
              lastModifiedTime:
                description: A timestamp that indicates when the status of the training
                  job was last modified.
                format: date-time
                type: string
              modelArtifacts:
                description: |-
                  Information about the Amazon S3 location that is configured for storing model
                  artifacts.
                properties:
                  s3ModelArtifacts:
                    type: string
                type: object
              profilerRuleEvaluationStatuses:
                description: |-
                  Evaluation status of Amazon SageMaker Debugger rules for profiling on a training
                  job.
                items:
                  description: Information about the status of the rule evaluation.
                  properties:
                    lastModifiedTime:
                      format: date-time
                      type: string
                    ruleConfigurationName:
                      type: string
                    ruleEvaluationJobARN:
                      type: string
                    ruleEvaluationStatus:
                      type: string
                    statusDetails:
                      type: string
                  type: object
                type: array
              profilingStatus:
                description: Profiling status of a training job.
                type: string
              secondaryStatus:
                description: |-
                  Provides detailed information about the state of the training job. For detailed
                  information on the secondary status of the training job, see StatusMessage
                  under SecondaryStatusTransition (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_SecondaryStatusTransition.html).

                  SageMaker provides primary statuses and secondary statuses that apply to
                  each of them:

                  InProgress

                     * Starting - Starting the training job.

                     * Downloading - An optional stage for algorithms that support File training
                     input mode. It indicates that data is being downloaded to the ML storage
                     volumes.

                     * Training - Training is in progress.

                     * Interrupted - The job stopped because the managed spot training instances
                     were interrupted.

                     * Uploading - Training is complete and the model artifacts are being uploaded
                     to the S3 location.

                  Completed

                     * Completed - The training job has completed.

                  Failed

                     * Failed - The training job has failed. The reason for the failure is
                     returned in the FailureReason field of DescribeTrainingJobResponse.

                  Stopped

                     * MaxRuntimeExceeded - The job stopped because it exceeded the maximum
                     allowed runtime.

                     * MaxWaitTimeExceeded - The job stopped because it exceeded the maximum
                     allowed wait time.

                     * Stopped - The training job has stopped.

                  Stopping

                     * Stopping - Stopping the training job.

                  Valid values for SecondaryStatus are subject to change.

                  We no longer support the following secondary statuses:

                     * LaunchingMLInstances

                     * PreparingTraining

                     * DownloadingTrainingImage
                type: string
              trainingJobStatus:
                description: |-
                  The status of the training job.

                  SageMaker provides the following training job statuses:

                     * InProgress - The training is in progress.

                     * Completed - The training job has completed.

                     * Failed - The training job has failed. To see the reason for the failure,
                     see the FailureReason field in the response to a DescribeTrainingJobResponse
                     call.

                     * Stopping - The training job is stopping.

                     * Stopped - The training job has stopped.

                  For more detailed information, see SecondaryStatus.
                type: string
              warmPoolStatus:
                description: The status of the warm pool associated with the training
                  job.
                properties:
                  resourceRetainedBillableTimeInSeconds:
                    description: |-
                      Optional. Indicates how many seconds the resource stayed in ResourceRetained
                      state. Populated only after resource reaches ResourceReused or ResourceReleased
                      state.
                    format: int64
                    type: integer
                  reusedByJob:
                    type: string
                  status:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: transformjobs.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: TransformJob
    listKind: TransformJobList
    plural: transformjobs
    singular: transformjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.transformJobStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TransformJob is the Schema for the TransformJobs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              TransformJobSpec defines the desired state of TransformJob.

              A batch transform job. For information about SageMaker batch transform, see
              Use Batch Transform (https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html).
            properties:
              batchStrategy:
                description: |-
                  Specifies the number of records to include in a mini-batch for an HTTP inference
                  request. A record is a single unit of input data that inference can be made
                  on. For example, a single line in a CSV file is a record.

                  To enable the batch strategy, you must set the SplitType property to Line,
                  RecordIO, or TFRecord.

                  To use only one record when making an HTTP invocation request to a container,
                  set BatchStrategy to SingleRecord and SplitType to Line.

                  To fit as many records in a mini-batch as can fit within the MaxPayloadInMB
                  limit, set BatchStrategy to MultiRecord and SplitType to Line.
                type: string
              dataProcessing:
                description: |-
                  The data structure used to specify the data to be used for inference in a
                  batch transform job and to associate the data that is relevant to the prediction
                  results in the output. The input filter provided allows you to exclude input
                  data that is not needed for inference in a batch transform job. The output
                  filter provided allows you to include input data relevant to interpreting
                  the predictions in the output from the job. For more information, see Associate
                  Prediction Results with their Corresponding Input Records (https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html).
                properties:
                  inputFilter:
                    type: string
                  joinSource:
                    type: string
                  outputFilter:
                    type: string
                type: object
              environment:
                additionalProperties:
                  type: string
                description: |-
                  The environment variables to set in the Docker container. Don't include any
                  sensitive data in your environment variables. We support up to 16 key and
                  values entries in the map.
                type: object
              experimentConfig:
                description: |-
                  Associates a SageMaker job as a trial component with an experiment and trial.
                  Specified when you call the following APIs:

                    - CreateProcessingJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateProcessingJob.html)

                    - CreateTrainingJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html)

                    - CreateTransformJob (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTransformJob.html)
                properties:
                  experimentName:
                    type: string
                  trialComponentDisplayName:
                    type: string
                  trialName:
                    type: string
                type: object
              maxConcurrentTransforms:
                description: |-
                  The maximum number of parallel requests that can be sent to each instance
                  in a transform job. If MaxConcurrentTransforms is set to 0 or left unset,
                  Amazon SageMaker checks the optional execution-parameters to determine the
                  settings for your chosen algorithm. If the execution-parameters endpoint
                  is not enabled, the default value is 1. For more information on execution-parameters,
                  see How Containers Serve Requests (https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-batch-code.html#your-algorithms-batch-code-how-containe-serves-requests).
                  For built-in algorithms, you don't need to set a value for MaxConcurrentTransforms.
                format: int64
                type: integer
              maxPayloadInMB:
                description: |-
                  The maximum allowed size of the payload, in MB. A payload is the data portion
                  of a record (without metadata). The value in MaxPayloadInMB must be greater
                  than, or equal to, the size of a single record. To estimate the size of a
                  record in MB, divide the size of your dataset by the number of records. To
                  ensure that the records fit within the maximum payload size, we recommend
                  using a slightly larger value. The default value is 6 MB.

                  The value of MaxPayloadInMB cannot be greater than 100 MB. If you specify
                  the MaxConcurrentTransforms parameter, the value of (MaxConcurrentTransforms
                  * MaxPayloadInMB) also cannot exceed 100 MB.

                  For cases where the payload might be arbitrarily large and is transmitted
                  using HTTP chunked encoding, set the value to 0. This feature works only
                  in supported algorithms. Currently, Amazon SageMaker built-in algorithms
                  do not support HTTP chunked encoding.
                format: int64
                type: integer
              modelClientConfig:
                description: |-
                  Configures the timeout and maximum number of retries for processing a transform
                  job invocation.
                properties:
                  invocationsMaxRetries:
                    format: int64
                    type: integer
                  invocationsTimeoutInSeconds:
                    format: int64
                    type: integer
                type: object
              modelName:
                description: |-
                  The name of the model that you want to use for the transform job. ModelName
                  must be the name of an existing Amazon SageMaker model within an Amazon Web
                  Services Region in an Amazon Web Services account.
                type: string
              tags:
                description: |-
                  (Optional) An array of key-value pairs. For more information, see Using Cost
                  Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what)
                  in the Amazon Web Services Billing and Cost Management User Guide.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              transformInput:
                description: Describes the input source and the way the transform
                  job consumes it.
                properties:
                  compressionType:
                    type: string
                  contentType:
                    type: string
                  dataSource:
                    description: Describes the location of the channel data.
                    properties:
                      s3DataSource:
                        description: Describes the S3 data source.
                        properties:
                          s3DataType:
                            type: string
                          s3URI:
                            type: string
                        type: object
                    type: object
                  splitType:
                    type: string
                type: object
              transformJobName:
                description: |-
                  The name of the transform job. The name must be unique within an Amazon Web
                  Services Region in an Amazon Web Services account.
                type: string
              transformOutput:
                description: Describes the results of the transform job.
                properties:
                  accept:
                    type: string
                  assembleWith:
                    type: string
                  kmsKeyID:
                    type: string
                  s3OutputPath:
                    type: string
                type: object
              transformResources:
                description: |-
                  Describes the resources, including ML instance types and ML instance count,
                  to use for the transform job.
                properties:
                  instanceCount:
                    format: int64
                    type: integer
                  instanceType:
                    type: string
                  volumeKMSKeyID:
                    type: string
                type: object
            required:
            - modelName
            - transformInput
            - transformJobName
            - transformOutput
            - transformResources
            type: object
          status:
            description: TransformJobStatus defines the observed state of TransformJob
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureReason:
                description: |-
                  If the transform job failed, FailureReason describes why it failed. A transform
                  job creates a log file, which includes error messages, and stores it as an
                  Amazon S3 object. For more information, see Log Amazon SageMaker Events with
                  Amazon CloudWatch (https://docs.aws.amazon.com/sagemaker/latest/dg/logging-cloudwatch.html).
                type: string
              transformJobStatus:
                description: |-
                  The status of the transform job. If the transform job failed, the reason
                  is returned in the FailureReason field.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: userprofiles.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: UserProfile
    listKind: UserProfileList
    plural: userprofiles
    singular: userprofile
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: UserProfile is the Schema for the UserProfiles API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserProfileSpec defines the desired state of UserProfile.
            properties:
              domainID:
                description: The ID of the associated Domain.
                type: string
              singleSignOnUserIdentifier:
                description: |-
                  A specifier for the type of value specified in SingleSignOnUserValue. Currently,
                  the only supported value is "UserName". If the Domain's AuthMode is IAM Identity
                  Center, this field is required. If the Domain's AuthMode is not IAM Identity
                  Center, this field cannot be specified.
                type: string
              singleSignOnUserValue:
                description: |-
                  The username of the associated Amazon Web Services Single Sign-On User for
                  this UserProfile. If the Domain's AuthMode is IAM Identity Center, this field
                  is required, and must match a valid username of a user in your directory.
                  If the Domain's AuthMode is not IAM Identity Center, this field cannot be
                  specified.
                type: string
              tags:
                description: |-
                  Each tag consists of a key and an optional value. Tag keys must be unique
                  per resource.

                  Tags that you specify for the User Profile are also added to all Apps that
                  the User Profile launches.
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              userProfileName:
                description: A name for the UserProfile. This value is not case sensitive.
                type: string
              userSettings:
                description: A collection of settings.
                properties:
                  codeEditorAppSettings:
                    description: |-
                      The Code Editor application settings.

                      For more information about Code Editor, see Get started with Code Editor
                      in Amazon SageMaker (https://docs.aws.amazon.com/sagemaker/latest/dg/code-editor.html).
                    properties:
                      defaultResourceSpec:
                        description: |-
                          Specifies the ARN's of a SageMaker image and SageMaker image version, and
                          the instance type that the version runs on.
                        properties:
                          instanceType:
                            type: string
                          lifecycleConfigARN:
                            type: string
                          sageMakerImageARN:
                            type: string
                          sageMakerImageVersionARN:
                            type: string
                          sageMakerImageVersionAlias:
                            type: string
                        type: object
                      lifecycleConfigARNs:
                        items:
                          type: string
                        type: array
                    type: object
                  customFileSystemConfigs:
                    items:
                      description: |-
                        The settings for assigning a custom file system to a user profile or space
                        for an Amazon SageMaker Domain. Permitted users can access this file system
                        in Amazon SageMaker Studio.
                      properties:
                        efsFileSystemConfig:
                          description: |-
                            The settings for assigning a custom Amazon EFS file system to a user profile
                            or space for an Amazon SageMaker Domain.
                          properties:
                            fileSystemID:
                              type: string
                            fileSystemPath:
                              type: string
                          type: object
                      type: object
                    type: array
                  customPosixUserConfig:
                    description: Details about the POSIX identity that is used for
                      file system operations.
                    properties:
                      gid:
                        format: int64
                        type: integer
                      uid:
                        format: int64
                        type: integer
                    type: object
                  defaultLandingURI:
                    type: string
                  executionRole:
                    type: string
                  jupyterLabAppSettings:
                    description: The settings for the JupyterLab application.
                    properties:
                      customImages:
                        items:
                          description: |-
                            A custom SageMaker image. For more information, see Bring your own SageMaker
                            image (https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html).
                          properties:
                            appImageConfigName:
                              type: string
                            imageName:
                              type: string
                            imageVersionNumber:
                              format: int64
                              type: integer
                          type: object
                        type: array
                      defaultResourceSpec:
                        description: |-
                          Specifies the ARN's of a SageMaker image and SageMaker image version, and
                          the instance type that the version runs on.
                        properties:
                          instanceType:
                            type: string
                          lifecycleConfigARN:
                            type: string
                          sageMakerImageARN:
                            type: string
                          sageMakerImageVersionARN:
                            type: string
                          sageMakerImageVersionAlias:
                            type: string
                        type: object
                      lifecycleConfigARNs:
                        items:
                          type: string
                        type: array
                    type: object
                  jupyterServerAppSettings:
                    description: The JupyterServer app settings.
                    properties:
                      defaultResourceSpec:
                        description: |-
                          Specifies the ARN's of a SageMaker image and SageMaker image version, and
                          the instance type that the version runs on.
                        properties:
                          instanceType:
                            type: string
                          lifecycleConfigARN:
                            type: string
                          sageMakerImageARN:
                            type: string
                          sageMakerImageVersionARN:
                            type: string
                          sageMakerImageVersionAlias:
                            type: string
                        type: object
                      lifecycleConfigARNs:
                        items:
                          type: string
                        type: array
                    type: object
                  kernelGatewayAppSettings:
                    description: The KernelGateway app settings.
                    properties:
                      customImages:
                        items:
                          description: |-
                            A custom SageMaker image. For more information, see Bring your own SageMaker
                            image (https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html).
                          properties:
                            appImageConfigName:
                              type: string
                            imageName:
                              type: string
                            imageVersionNumber:
                              format: int64
                              type: integer
                          type: object
                        type: array
                      defaultResourceSpec:
                        description: |-
                          Specifies the ARN's of a SageMaker image and SageMaker image version, and
                          the instance type that the version runs on.
                        properties:
                          instanceType:
                            type: string
                          lifecycleConfigARN:
                            type: string
                          sageMakerImageARN:
                            type: string
                          sageMakerImageVersionARN:
                            type: string
                          sageMakerImageVersionAlias:
                            type: string
                        type: object
                      lifecycleConfigARNs:
                        items:
                          type: string
                        type: array
                    type: object
                  rStudioServerProAppSettings:
                    description: |-
                      A collection of settings that configure user interaction with the RStudioServerPro
                      app.
                    properties:
                      accessStatus:
                        type: string
                      userGroup:
                        type: string
                    type: object
                  securityGroups:
                    items:
                      type: string
                    type: array
                  sharingSettings:
                    description: |-
                      Specifies options for sharing Amazon SageMaker Studio notebooks. These settings
                      are specified as part of DefaultUserSettings when the CreateDomain API is
                      called, and as part of UserSettings when the CreateUserProfile API is called.
                      When SharingSettings is not specified, notebook sharing isn't allowed.
                    properties:
                      notebookOutputOption:
                        type: string
                      s3KMSKeyID:
                        type: string
                      s3OutputPath:
                        type: string
                    type: object
                  spaceStorageSettings:
                    description: The default storage settings for a space.
                    properties:
                      defaultEBSStorageSettings:
                        description: |-
                          A collection of default EBS storage settings that apply to spaces created
                          within a domain or user profile.
                        properties:
                          defaultEBSVolumeSizeInGb:
                            format: int64
                            type: integer
                          maximumEBSVolumeSizeInGb:
                            format: int64
                            type: integer
                        type: object
                    type: object
                  studioWebPortal:
                    type: string
                  tensorBoardAppSettings:
                    description: The TensorBoard app settings.
                    properties:
                      defaultResourceSpec:
                        description: |-
                          Specifies the ARN's of a SageMaker image and SageMaker image version, and
                          the instance type that the version runs on.
                        properties:
                          instanceType:
                            type: string
                          lifecycleConfigARN:
                            type: string
                          sageMakerImageARN:
                            type: string
                          sageMakerImageVersionARN:
                            type: string
                          sageMakerImageVersionAlias:
                            type: string
                        type: object
                    type: object
                type: object
            required:
            - domainID
            - userProfileName
            type: object
          status:
            description: UserProfileStatus defines the observed state of UserProfile
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              status:
                description: The status.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: adoptedresources.services.k8s.aws
spec:
  group: services.k8s.aws
  names:
    kind: AdoptedResource
    listKind: AdoptedResourceList
    plural: adoptedresources
    singular: adoptedresource
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AdoptedResource is the schema for the AdoptedResource API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AdoptedResourceSpec defines the desired state of the AdoptedResource.
            properties:
              aws:
                description: AWSIdentifiers provide all unique ways to reference an
                  AWS resource.
                properties:
                  additionalKeys:
                    additionalProperties:
                      type: string
                    description: |-
                      AdditionalKeys represents any additional arbitrary identifiers used when
                      describing the target resource.
                    type: object
                  arn:
                    description: |-
                      ARN is the AWS Resource Name for the resource. It is a globally
                      unique identifier.
                    type: string
                  nameOrID:
                    description: |-
                      NameOrId is a user-supplied string identifier for the resource. It may
                      or may not be globally unique, depending on the type of resource.
                    type: string
                type: object
              kubernetes:
                description: |-
                  ResourceWithMetadata provides the values necessary to create a
                  Kubernetes resource and override any of its metadata values.
                properties:
                  group:
                    type: string
                  kind:
                    type: string
                  metadata:
                    description: |-
                      ObjectMeta is metadata that all persisted resources must have, which includes all objects
                      users must create.
                      It is not possible to use `metav1.ObjectMeta` inside spec, as the controller-gen
                      automatically converts this to an arbitrary string-string map.
                      https://github.com/kubernetes-sigs/controller-tools/issues/385

                      Active discussion about inclusion of this field in the spec is happening in this PR:
                      https://github.com/kubernetes-sigs/controller-tools/pull/395

                      Until this is allowed, or if it never is, we will produce a subset of the object meta
                      that contains only the fields which the user is allowed to modify in the metadata.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      generateName:
                        description: |-
                          GenerateName is an optional prefix, used by the server, to generate a unique
                          name ONLY IF the Name field has not been provided.
                          If this field is used, the name returned to the client will be different
                          than the name passed. This value will also be combined with a unique suffix.
                          The provided value has the same validation rules as the Name field,
                          and may be truncated by the length of the suffix required to make the value
                          unique on the server.

                          If this field is specified and the generated name exists, the server will
                          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
                          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
                          should retry (optionally after the time indicated in the Retry-After header).

                          Applied only if Name is not specified.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: http://kubernetes.io/docs/user-guide/identifiers#names
                        type: string
                      namespace:
                        description: |-
                          Namespace defines the space within each name must be unique. An empty namespace is
                          equivalent to the "default" namespace, but "default" is the canonical representation.
                          Not all objects are required to be scoped to a namespace - the value of this field for
                          those objects will be empty.

                          Must be a DNS_LABEL.
                          Cannot be updated.
                          More info: http://kubernetes.io/docs/user-guide/namespaces
                        type: string
                      ownerReferences:
                        description: |-
                          List of objects depended by this object. If ALL objects in the list have
                          been deleted, this object will be garbage collected. If this object is managed by a controller,
                          then an entry in this list will point to this controller, with the controller field set to true.
                          There cannot be more than one managing controller.
                        items:
                          description: |-
                            OwnerReference contains enough information to let you identify an owning
                            object. An owning object must be in the same namespace as the dependent, or
                            be cluster-scoped, so there is no namespace field.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            blockOwnerDeletion:
                              description: |-
                                If true, AND if the owner has the "foregroundDeletion" finalizer, then
                                the owner cannot be deleted from the key-value store until this
                                reference is removed.
                                See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
                                for how the garbage collector interacts with this field and enforces the foreground deletion.
                                Defaults to false.
                                To set this field, a user needs "delete" permission of the owner,
                                otherwise 422 (Unprocessable Entity) will be returned.
                              type: boolean
                            controller:
                              description: If true, this reference points to the managing
                                controller.
                              type: boolean
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
                              type: string
                          required:
                          - apiVersion
                          - kind
                          - name
                          - uid
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                    type: object
                required:
                - group
                - kind
                type: object
            required:
            - aws
            - kubernetes
            type: object
          status:
            description: AdoptedResourceStatus defines the observed status of the
              AdoptedResource.
            properties:
              conditions:
                description: |-
                  A collection of `ackv1alpha1.Condition` objects that describe the various
                  terminal states of the adopted resource CR and its target custom resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: fieldexports.services.k8s.aws
spec:
  group: services.k8s.aws
  names:
    kind: FieldExport
    listKind: FieldExportList
    plural: fieldexports
    singular: fieldexport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FieldExport is the schema for the FieldExport API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FieldExportSpec defines the desired state of the FieldExport.
            properties:
              from:
                description: |-
                  ResourceFieldSelector provides the values necessary to identify an individual
                  field on an individual K8s resource.
                properties:
                  path:
                    type: string
                  resource:
                    description: |-
                      NamespacedResource provides all the values necessary to identify an ACK
                      resource of a given type (within the same namespace as the custom resource
                      containing this type).
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                    required:
                    - group
                    - kind
                    - name
                    type: object
                required:
                - path
                - resource
                type: object
              to:
                description: |-
                  FieldExportTarget provides the values necessary to identify the
                  output path for a field export.
                properties:
                  key:
                    description: Key overrides the default value (`<namespace>.<FieldExport-resource-name>`)
                      for the FieldExport target
                    type: string
                  kind:
                    description: |-
                      FieldExportOutputType represents all types that can be produced by a field
                      export operation
                    enum:
                    - configmap
                    - secret
                    type: string
                  name:
                    type: string
                  namespace:
                    description: Namespace is marked as optional, so we cannot compose
                      `NamespacedName`
                    type: string
                required:
                - kind
                - name
                type: object
            required:
            - from
            - to
            type: object
          status:
            description: FieldExportStatus defines the observed status of the FieldExport.
            properties:
              conditions:
                description: |-
                  A collection of `ackv1alpha1.Condition` objects that describe the various
                  recoverable states of the field CR
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
