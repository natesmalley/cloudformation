AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Purple – Shared-services S3 bucket (converted 1-for-1 from Terraform).

###############################################################################
# Parameters – mirrors variables.tf
###############################################################################
Parameters:
  BucketName:
    Type: String
    Description: "Name of the S3 bucket"
  Environment:
    Type: String
    Description: "Environment name (e.g., dev, prod)"

  AllowedInboundCidrBlocks:
    Type: CommaDelimitedList
    Default: ""
    Description: "CIDR blocks allowed GetObject access (optional)"

  OffensiveSecurityAccess:
    Type: CommaDelimitedList
    Default: ""
    Description: "IP addresses for offensive-security teams (optional)"

###############################################################################
# Conditions
###############################################################################
Conditions:
  HasAllowedCidr: !Not [ !Equals [ !Join ["", !Ref AllowedInboundCidrBlocks], "" ] ]
  HasOffSecIps:   !Not [ !Equals [ !Join ["", !Ref OffensiveSecurityAccess], "" ] ]

###############################################################################
# Resources
###############################################################################
Resources:
  VulnerableBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Ref BucketName

  VulnerableBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref VulnerableBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowWhitelistedIPs
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "${VulnerableBucket.Arn}/*"
            Condition:
              IpAddress:
                "aws:SourceIp":
                  !If
                    - HasAllowedCidr
                    - !If
                      - HasOffSecIps
                      - !Split 
                        - ","
                        - !Join 
                          - ","
                          - - !Join [ ",", !Ref AllowedInboundCidrBlocks ]
                            - !Join [ ",", !Ref OffensiveSecurityAccess ]
                      - !Ref AllowedInboundCidrBlocks
                    - !If
                      - HasOffSecIps
                      - !Ref OffensiveSecurityAccess
                      - [ "0.0.0.0/32" ]

          - Sid: DenyInsecureTransport
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource: !Sub "${VulnerableBucket.Arn}/*"
            Condition:
              Bool:
                "aws:SecureTransport": false

###############################################################################
# Outputs – parity with outputs.tf
###############################################################################
Outputs:
  BucketName:
    Description: "Name of the created S3 bucket"
    Value: !Ref VulnerableBucket
    Export:
      Name: !Sub "${AWS::StackName}-BucketName"

  BucketArn:
    Description: "ARN of the created S3 bucket"
    Value: !GetAtt VulnerableBucket.Arn
    Export:
      Name: !Sub "${AWS::StackName}-BucketArn"

  BucketRegion:
    Description: "Region where the bucket is created"
    Value: !Ref "AWS::Region"
    Export:
      Name: !Sub "${AWS::StackName}-BucketRegion"